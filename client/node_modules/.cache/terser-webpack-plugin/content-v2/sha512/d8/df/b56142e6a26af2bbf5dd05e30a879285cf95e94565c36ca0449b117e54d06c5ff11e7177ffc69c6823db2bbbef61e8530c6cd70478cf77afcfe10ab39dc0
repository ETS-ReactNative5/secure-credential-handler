{"map":"{\"version\":3,\"sources\":[\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/Header.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/DisplayForm.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/ValidatingForm.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/UpdateForm.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/ValidatingFormWizard1.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/ValidatingFormWizard2.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/SimpleList.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/TableList.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/ListToList.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/LinkedList.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/MasterDetail.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/CreateReadUpdateDelete.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/SearchList.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/pattern-components/SearchForm.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/components/UIShellBody.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/components/UIShell.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/App.jsx\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/serviceWorker.js\",\"/Users/muthu/Projects/CloudNative/codepatterns/secret-manager/secret-manager-app/client/src/index.js\"],\"names\":[\"Header\",\"_this$props\",\"this\",\"props\",\"title\",\"subtitle\",\"react_default\",\"a\",\"createElement\",\"className\",\"data-notification\",\"role\",\"width\",\"height\",\"viewBox\",\"xmlns\",\"d\",\"Component\",\"DisplayForm\",\"_this\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"data\",\"label\",\"value\",\"type\",\"showDescription\",\"nextProps\",\"setState\",\"pattern_components_Header\",\"Tile\",\"Form\",\"map\",\"item\",\"key\",\"TextInput\",\"disabled\",\"id\",\"labelText\",\"charAt\",\"toUpperCase\",\"slice\",\"replace\",\"DropdownV2\",\"toLowerCase\",\"items\",\"selectedItem\",\"checkFlag\",\"ValidatingForm\",\"convertData\",\"inputData\",\"output\",\"forEach\",\"dataRow\",\"saveData\",\"event\",\"_this$setState2\",\"_this$setState\",\"target\",\"fieldName\",\"name\",\"fieldValue\",\"defineProperty\",\"saveDataDropdown1\",\"_ref\",\"stateInvalid\",\"saveDataDropdown2\",\"_ref2\",\"country\",\"countryInvalid\",\"checkForm\",\"nameInvalid\",\"address\",\"addressInvalid\",\"city\",\"cityInvalid\",\"zipCode\",\"test\",\"zipCodeInvalid\",\"saveForm\",\"preventDefault\",\"dataToSave\",\"updateRow\",\"adding\",\"toggleAdding\",\"dataToLoad\",\"objectSpread\",\"Name\",\"Address\",\"City\",\"State\",\"ZipCode\",\"Country\",\"_this2\",\"onChange\",\"maxLength\",\"invalid\",\"invalidText\",\"ariaLabel\",\"Button\",\"onClick\",\"keys\",\"length\",\"UpdateForm\",\"ValidatingFormWizard1\",\"onSelectionChange\",\"tabId\",\"selectedTab\",\"nextTab\",\"checkFormTab1\",\"prevState\",\"firstName\",\"firstNameInvalid\",\"lastName\",\"lastNameInvalid\",\"streetAddress\",\"streetAddressInvalid\",\"middleName\",\"Tabs\",\"selected\",\"Tab\",\"ValidatingFormWizard2\",\"prevTab\",\"SimpleList\",\"onRowClick\",\"selectedRow\",\"renderRow\",\"row\",\"StructuredList\",\"concat\",\"checked\",\"Icon\",\"icon\",\"iconCheckmarkSolid\",\"selection\",\"border\",\"head\",\"i\",\"TableList\",\"columns\",\"formatters\",\"val\",\"col\",\"format\",\"Table\",\"DataTable\",\"TableBody\",\"TableCell\",\"TableContainer\",\"TableHead\",\"TableHeader\",\"TableRow\",\"TableSelectAll\",\"TableSelectRow\",\"ListToList\",\"selectedRowsListA\",\"selectedRowsListB\",\"moveFromListAToB\",\"rowsListA\",\"rowsListB\",\"elem\",\"filter\",\"push\",\"moveFromListBToA\",\"port\",\"headers\",\"header\",\"rows\",\"render\",\"getHeaderProps\",\"getRowProps\",\"getSelectionProps\",\"selectedRows\",\"cells\",\"cell\",\"LinkedList\",\"stateList\",\"cityList\",\"saveDataDropdown3\",\"_ref3\",\"United States\",\"TX\",\"CA\",\"Other\",\"Mexico\",\"Aguascalientes\",\"Baja California\",\"countryList\",\"MasterDetail\",\"values\",\"pattern_components_DisplayForm\",\"CreateReadUpdateDelete\",\"addRow\",\"deleteRow\",\"splice\",\"newData\",\"pattern_components_ValidatingForm\",\"SearchList\",\"onSearch\",\"searchKeyword\",\"subset\",\"initialRowsList\",\"datarow\",\"reduce\",\"accumulator\",\"field\",\"toLocaleLowerCase\",\"includes\",\"rowsList\",\"status\",\"Search\",\"closeButtonLabelText\",\"placeHolderText\",\"light\",\"SearchList_TableContainer\",\"SearchList_Table\",\"SearchList_TableHead\",\"SearchList_TableRow\",\"SearchList_TableHeader\",\"SearchList_TableBody\",\"SearchList_TableCell\",\"SearchForm\",\"formatDataForDisplayForm\",\"getFilteredData\",\"filteredData\",\"UIShellBody\",\"components\",\"Display Form\",\"Validating Form\",\"Update Form\",\"Validating Form Wizard 1\",\"Validating Form Wizard 2\",\"Simple List\",\"Table List\",\"List to List\",\"Linked List\",\"Master Detail\",\"Create, Read, Update, Delete\",\"Search List\",\"Search Form\",\"defaultComponent\",\"PatternName\",\"patternName\",\"Fade20\",\"aria-hidden\",\"UIShell\",\"menuTitle\",\"menuItems\",\"onPatternSelection\",\"renderSideNavItems\",\"renderSideNavItem\",\"components_UIShell\",\"href\",\"isActive\",\"e\",\"aria-label\",\"prefix\",\"defaultExpanded\",\"UIShell_Fade20\",\"components_UIShellBody\",\"App\",\"src_components_UIShell\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from \\\"react\\\";\\nimport \\\"./patterns.scss\\\";\\n\\nclass Header extends Component {\\n  render() {\\n    const { title, subtitle } = this.props;\\n    return (\\n      <div className=\\\"bx--row pattern-description\\\">\\n        <div className=\\\"bx--col-xs-12\\\">\\n          <h1 className=\\\"pattern-title\\\">{title}</h1>\\n          <div\\n            data-notification\\n            className=\\\"bx--inline-notification bx--inline-notification--info\\\"\\n            role=\\\"alert\\\"\\n          >\\n            <div className=\\\"bx--inline-notification__details\\\">\\n              <svg\\n                className=\\\"bx--inline-notification__icon\\\"\\n                width=\\\"16\\\"\\n                height=\\\"16\\\"\\n                viewBox=\\\"0 0 16 16\\\"\\n                xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n              >\\n                <path d=\\\"M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm1-3V7H7v6h2zM8 5a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\\\" />\\n              </svg>\\n              <div className=\\\"bx--inline-notification__text-wrapper\\\">\\n                <p className=\\\"bx--inline-notification__title\\\">{\\\"\\\"}</p>\\n                <p className=\\\"bx--inline-notification__subtitle\\\">{subtitle}</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default Header;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport { TextInput, Form, DropdownV2, Tile } from \\\"carbon-components-react\\\";\\nimport Header from \\\"./Header\\\";\\nimport \\\"./patterns.scss\\\";\\n\\nclass DisplayForm extends Component {\\n  constructor(props) {\\n    super(props);\\n    const defaultData = [\\n      { label: \\\"Name\\\", value: \\\"John Doe\\\", type: \\\"textinput\\\" },\\n      { label: \\\"Address\\\", value: \\\"123 Main Street\\\", type: \\\"textinput\\\" },\\n      { label: \\\"City\\\", value: \\\"Anytown\\\", type: \\\"textinput\\\" },\\n      { label: \\\"State\\\", value: [\\\"TX\\\"], type: \\\"dropdown\\\" },\\n      { label: \\\"ZipCode\\\", value: \\\"12345\\\", type: \\\"textinput\\\" },\\n      { label: \\\"Country\\\", value: [\\\"United States\\\"], type: \\\"dropdown\\\" }\\n    ];\\n    this.state = {\\n      data: props.data || defaultData,\\n      showDescription: props.showDescription || false\\n    };\\n  }\\n\\n  componentWillReceiveProps(nextProps) {\\n    if (nextProps.data) this.setState({ data: nextProps.data });\\n  }\\n\\n  render() {\\n    const data = this.state.data;\\n    const showDescription = this.state.showDescription;\\n    return (\\n      <div className=\\\"bx--grid\\\">\\n        {showDescription && (\\n          <Header\\n            title=\\\"Display Form\\\"\\n            subtitle=\\\"Displays a model object as a form in a read only display.\\\"\\n          />\\n        )}\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            <Tile>\\n              <Form>\\n                {data.map(item => {\\n                  if (item.type === \\\"textinput\\\") {\\n                    return (\\n                      <div key={item.label} className=\\\"display-form-item\\\">\\n                        <TextInput\\n                          disabled\\n                          id={item.label}\\n                          value={item.value}\\n                          labelText={\\n                            item.label.charAt(0).toUpperCase() +\\n                            item.label.slice(1).replace(/([A-Z])/g, \\\" $1\\\")\\n                          }\\n                        />\\n                      </div>\\n                    );\\n                  } else if (item.type === \\\"dropdown\\\") {\\n                    return (\\n                      <div key={item.label} className=\\\"display-form-item\\\">\\n                        <p className=\\\"bx--label left-align\\\">{item.label}</p>\\n                        <DropdownV2\\n                          disabled\\n                          id={item.label}\\n                          label={\\\"Select a \\\" + item.label.toLowerCase() + \\\"..\\\"}\\n                          items={item.value}\\n                          selectedItem={item.value[0]}\\n                        />\\n                      </div>\\n                    );\\n                  } else {\\n                    return <div />;\\n                  }\\n                })}\\n              </Form>\\n            </Tile>\\n          </div>\\n        </div>\\n        <br />\\n        <br />\\n      </div>\\n    );\\n  }\\n}\\nexport default DisplayForm;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport {\\n  TextInput,\\n  Form,\\n  DropdownV2,\\n  Button,\\n  Tile\\n} from \\\"carbon-components-react\\\";\\nimport Header from \\\"./Header\\\";\\nimport \\\"./patterns.scss\\\";\\n\\nlet checkFlag = true;\\n\\nclass ValidatingForm extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      dataToSave: {},\\n      showDescription: props.showDescription || false\\n    };\\n    if (this.props.data) {\\n      let dataToLoad = this.convertData(this.props.data);\\n      this.state = {\\n        ...this.state,\\n        name: dataToLoad.Name,\\n        address: dataToLoad.Address,\\n        city: dataToLoad.City,\\n        state: dataToLoad.State[0],\\n        zipCode: dataToLoad.ZipCode,\\n        country: dataToLoad.Country[0]\\n      };\\n    }\\n  }\\n\\n  componentWillReceiveProps(nextProps) {\\n    if (nextProps.data) {\\n      let dataToLoad = this.convertData(nextProps.data);\\n      if (dataToLoad.Name === \\\"Enter data below\\\") {\\n        dataToLoad.Name = \\\"\\\";\\n      }\\n      this.setState({\\n        name: dataToLoad.Name,\\n        address: dataToLoad.Address,\\n        city: dataToLoad.City,\\n        state: dataToLoad.State[0],\\n        zipCode: dataToLoad.ZipCode,\\n        country: dataToLoad.Country[0]\\n      });\\n    }\\n  }\\n\\n  convertData = inputData => {\\n    let output = {};\\n    inputData.forEach(dataRow => {\\n      output[dataRow.label] = dataRow.value;\\n    });\\n    return output;\\n  };\\n\\n  saveData = event => {\\n    const target = event.target;\\n    let fieldName = target.name;\\n    let fieldValue = target.value;\\n    if (!fieldValue) {\\n      this.setState({ [fieldName]: fieldValue, [fieldName + \\\"Invalid\\\"]: true });\\n    } else {\\n      this.setState({\\n        [fieldName]: fieldValue,\\n        [fieldName + \\\"Invalid\\\"]: false\\n      });\\n    }\\n  };\\n\\n  saveDataDropdown1 = ({ selectedItem }) => {\\n    this.setState({ state: selectedItem, stateInvalid: false });\\n  };\\n\\n  saveDataDropdown2 = ({ selectedItem }) => {\\n    this.setState({ country: selectedItem, countryInvalid: false });\\n  };\\n\\n  checkForm = () => {\\n    checkFlag = true;\\n    if (!this.state.name) {\\n      this.setState({ nameInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.address) {\\n      this.setState({ addressInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.city) {\\n      this.setState({ cityInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.state) {\\n      this.setState({ stateInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (\\n      !this.state.zipCode ||\\n      (this.state.country === \\\"United States\\\" &&\\n        !/(^\\\\d{5}$)|(^\\\\d{5}-\\\\d{4}$)/.test(this.state.zipCode))\\n    ) {\\n      this.setState({ zipCodeInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.country) {\\n      this.setState({ countryInvalid: true });\\n      checkFlag = false;\\n    }\\n    return checkFlag;\\n  };\\n\\n  saveForm = event => {\\n    event.preventDefault();\\n    if (this.checkForm()) {\\n      let dataToSave = {\\n        name: this.state.name,\\n        address: this.state.address,\\n        city: this.state.city,\\n        state: this.state.state,\\n        zipCode: this.state.zipCode,\\n        country: this.state.country\\n      };\\n      if (typeof this.props.updateRow === \\\"function\\\") {\\n        this.props.updateRow(dataToSave);\\n      } else {\\n        this.setState({ dataToSave });\\n      }\\n      if (this.props.adding) {\\n        this.props.toggleAdding();\\n      }\\n    }\\n  };\\n\\n  render() {\\n    const showDescription = this.state.showDescription;\\n    return (\\n      <div className=\\\"bx--grid pattern-container\\\">\\n        {showDescription && (\\n          <Header\\n            title=\\\"Validating Form\\\"\\n            subtitle=\\\"Presents a model object as a data input form and interacts with a validation service for validation.\\\"\\n          />\\n        )}\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            <Tile>\\n              <Form>\\n                <TextInput\\n                  id=\\\"name\\\"\\n                  name=\\\"name\\\"\\n                  value={this.state.name || \\\"\\\"}\\n                  onChange={this.saveData}\\n                  labelText=\\\"Name\\\"\\n                  maxLength=\\\"100\\\"\\n                  invalid={this.state.nameInvalid}\\n                  invalidText=\\\"Please enter a name..\\\"\\n                />\\n                <br />\\n                <br />\\n                <TextInput\\n                  id=\\\"address\\\"\\n                  name=\\\"address\\\"\\n                  value={this.state.address || \\\"\\\"}\\n                  onChange={this.saveData}\\n                  labelText=\\\"Address\\\"\\n                  maxLength=\\\"200\\\"\\n                  invalid={this.state.addressInvalid}\\n                  invalidText=\\\"Please enter an address..\\\"\\n                />\\n                <br />\\n                <br />\\n                <TextInput\\n                  id=\\\"city\\\"\\n                  name=\\\"city\\\"\\n                  value={this.state.city || \\\"\\\"}\\n                  onChange={this.saveData}\\n                  labelText=\\\"City\\\"\\n                  maxLength=\\\"100\\\"\\n                  invalid={this.state.cityInvalid}\\n                  invalidText=\\\"Please enter a city..\\\"\\n                />\\n                <br />\\n                <br />\\n                <p className=\\\"bx--label left-align\\\">State</p>\\n                <DropdownV2\\n                  id=\\\"state\\\"\\n                  label=\\\"Select a state..\\\"\\n                  ariaLabel=\\\"Select a state..\\\"\\n                  items={[\\n                    \\\"AL\\\",\\n                    \\\"AK\\\",\\n                    \\\"AS\\\",\\n                    \\\"AZ\\\",\\n                    \\\"AR\\\",\\n                    \\\"CA\\\",\\n                    \\\"CO\\\",\\n                    \\\"CT\\\",\\n                    \\\"DE\\\",\\n                    \\\"DC\\\",\\n                    \\\"FM\\\",\\n                    \\\"FL\\\",\\n                    \\\"GA\\\",\\n                    \\\"GU\\\",\\n                    \\\"HI\\\",\\n                    \\\"ID\\\",\\n                    \\\"IL\\\",\\n                    \\\"IN\\\",\\n                    \\\"IA\\\",\\n                    \\\"KS\\\",\\n                    \\\"KY\\\",\\n                    \\\"LA\\\",\\n                    \\\"ME\\\",\\n                    \\\"MH\\\",\\n                    \\\"MD\\\",\\n                    \\\"MA\\\",\\n                    \\\"MI\\\",\\n                    \\\"MN\\\",\\n                    \\\"MS\\\",\\n                    \\\"MO\\\",\\n                    \\\"MT\\\",\\n                    \\\"NE\\\",\\n                    \\\"NV\\\",\\n                    \\\"NH\\\",\\n                    \\\"NJ\\\",\\n                    \\\"NM\\\",\\n                    \\\"NY\\\",\\n                    \\\"NC\\\",\\n                    \\\"ND\\\",\\n                    \\\"MP\\\",\\n                    \\\"OH\\\",\\n                    \\\"OK\\\",\\n                    \\\"OR\\\",\\n                    \\\"PW\\\",\\n                    \\\"PA\\\",\\n                    \\\"PR\\\",\\n                    \\\"RI\\\",\\n                    \\\"SC\\\",\\n                    \\\"SD\\\",\\n                    \\\"TN\\\",\\n                    \\\"TX\\\",\\n                    \\\"UT\\\",\\n                    \\\"VT\\\",\\n                    \\\"VI\\\",\\n                    \\\"VA\\\",\\n                    \\\"WA\\\",\\n                    \\\"WV\\\",\\n                    \\\"WI\\\",\\n                    \\\"WY\\\",\\n                    \\\"Other\\\"\\n                  ]}\\n                  selectedItem={this.state.state}\\n                  onChange={this.saveDataDropdown1}\\n                />\\n                {this.state.stateInvalid && (\\n                  <p className=\\\"dropdown-invalid\\\">Please select a state..</p>\\n                )}\\n                <br />\\n                <br />\\n                <TextInput\\n                  id=\\\"zipCode\\\"\\n                  name=\\\"zipCode\\\"\\n                  value={this.state.zipCode || \\\"\\\"}\\n                  onChange={this.saveData}\\n                  labelText=\\\"Zip Code\\\"\\n                  maxLength=\\\"20\\\"\\n                  invalid={this.state.zipCodeInvalid}\\n                  invalidText=\\\"Please enter a valid zip code..\\\"\\n                />\\n                <br />\\n                <br />\\n                <p className=\\\"bx--label left-align\\\">Country</p>\\n                <DropdownV2\\n                  id=\\\"country\\\"\\n                  label=\\\"Select a country..\\\"\\n                  ariaLabel=\\\"Select a country..\\\"\\n                  items={[\\\"United States\\\", \\\"Other\\\"]}\\n                  selectedItem={this.state.country}\\n                  onChange={this.saveDataDropdown2}\\n                />\\n                {this.state.countryInvalid && (\\n                  <p className=\\\"dropdown-invalid\\\">Please select a country..</p>\\n                )}\\n                <br />\\n                <br />\\n                <div className=\\\"left-align\\\">\\n                  {showDescription && (\\n                    <Button onClick={this.saveForm}>Submit</Button>\\n                  )}\\n                  {!showDescription && (\\n                    <Button onClick={this.saveForm}>\\n                      {this.props.adding ? \\\"Add\\\" : \\\"Update\\\"}\\n                    </Button>\\n                  )}\\n                </div>\\n              </Form>\\n            </Tile>\\n          </div>\\n        </div>\\n        <br />\\n        <br />\\n        {Object.keys(this.state.dataToSave).length > 0 && (\\n          <div className=\\\"bx--row\\\">\\n            <div className=\\\"bx--col-xs-12 left-align\\\">\\n              <Tile>\\n                {Object.keys(this.state.dataToSave).map(item => (\\n                  <p>\\n                    &nbsp;&nbsp;\\n                    <strong>\\n                      {item.charAt(0).toUpperCase() +\\n                        item.slice(1).replace(/([A-Z])/g, \\\" $1\\\")}\\n                      :\\n                    </strong>{\\\" \\\"}\\n                    {this.state.dataToSave[item]}\\n                  </p>\\n                ))}\\n              </Tile>\\n              <br />\\n              <br />\\n            </div>\\n          </div>\\n        )}\\n      </div>\\n    );\\n  }\\n}\\nexport default ValidatingForm;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport {\\n  TextInput,\\n  Form,\\n  DropdownV2,\\n  Button,\\n  Tile\\n} from \\\"carbon-components-react\\\";\\nimport Header from \\\"./Header\\\";\\nimport \\\"./patterns.scss\\\";\\n\\nlet checkFlag = true;\\n\\nclass UpdateForm extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      dataToSave: {},\\n      name: \\\"John Doe\\\",\\n      address: \\\"123 Main Street\\\",\\n      city: \\\"Anytown\\\",\\n      state: \\\"TX\\\",\\n      zipCode: \\\"12345\\\",\\n      country: \\\"United States\\\"\\n    };\\n  }\\n\\n  componentDidMount() {\\n    let dataToSave = {\\n      name: this.state.name,\\n      address: this.state.address,\\n      city: this.state.city,\\n      state: this.state.state,\\n      zipCode: this.state.zipCode,\\n      country: this.state.country\\n    };\\n    this.setState({ dataToSave });\\n  }\\n\\n  saveData = event => {\\n    const target = event.target;\\n    let fieldName = target.name;\\n    let fieldValue = target.value;\\n    if (!fieldValue) {\\n      this.setState({ [fieldName]: fieldValue, [fieldName + \\\"Invalid\\\"]: true });\\n    } else {\\n      this.setState({\\n        [fieldName]: fieldValue,\\n        [fieldName + \\\"Invalid\\\"]: false\\n      });\\n    }\\n  };\\n\\n  saveDataDropdown1 = ({ selectedItem }) => {\\n    this.setState({ state: selectedItem, stateInvalid: false });\\n  };\\n\\n  saveDataDropdown2 = ({ selectedItem }) => {\\n    this.setState({ country: selectedItem, countryInvalid: false });\\n  };\\n\\n  checkForm = () => {\\n    checkFlag = true;\\n    if (!this.state.name) {\\n      this.setState({ nameInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.address) {\\n      this.setState({ addressInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.city) {\\n      this.setState({ cityInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.state) {\\n      this.setState({ stateInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (\\n      !this.state.zipCode ||\\n      (this.state.country === \\\"United States\\\" &&\\n        !/(^\\\\d{5}$)|(^\\\\d{5}-\\\\d{4}$)/.test(this.state.zipCode))\\n    ) {\\n      this.setState({ zipCodeInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.country) {\\n      this.setState({ countryInvalid: true });\\n      checkFlag = false;\\n    }\\n    return checkFlag;\\n  };\\n\\n  saveForm = event => {\\n    event.preventDefault();\\n    if (this.checkForm()) {\\n      let dataToSave = {\\n        name: this.state.name,\\n        address: this.state.address,\\n        city: this.state.city,\\n        state: this.state.state,\\n        zipCode: this.state.zipCode,\\n        country: this.state.country\\n      };\\n      this.setState({ dataToSave });\\n    }\\n  };\\n\\n  render() {\\n    return (\\n      <div className=\\\"bx--grid pattern-container\\\">\\n        <Header\\n          title=\\\"Update Form\\\"\\n          subtitle=\\\"Update form is based on the Display\\n            Form pattern but will display model data and then validate ready for\\n            it to be updated.\\\"\\n        />\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            <Tile>\\n              <Form>\\n                <TextInput\\n                  id=\\\"name\\\"\\n                  name=\\\"name\\\"\\n                  value={this.state.name || \\\"\\\"}\\n                  onChange={this.saveData}\\n                  labelText=\\\"Name\\\"\\n                  maxLength=\\\"100\\\"\\n                  invalid={this.state.nameInvalid}\\n                  invalidText=\\\"Please enter a name..\\\"\\n                />\\n                <br />\\n                <br />\\n                <TextInput\\n                  id=\\\"address\\\"\\n                  name=\\\"address\\\"\\n                  value={this.state.address || \\\"\\\"}\\n                  onChange={this.saveData}\\n                  labelText=\\\"Address\\\"\\n                  maxLength=\\\"200\\\"\\n                  invalid={this.state.addressInvalid}\\n                  invalidText=\\\"Please enter an address..\\\"\\n                />\\n                <br />\\n                <br />\\n                <TextInput\\n                  id=\\\"city\\\"\\n                  name=\\\"city\\\"\\n                  value={this.state.city || \\\"\\\"}\\n                  onChange={this.saveData}\\n                  labelText=\\\"City\\\"\\n                  maxLength=\\\"100\\\"\\n                  invalid={this.state.cityInvalid}\\n                  invalidText=\\\"Please enter a city..\\\"\\n                />\\n                <br />\\n                <br />\\n                <p className=\\\"bx--label left-align\\\">State</p>\\n                <DropdownV2\\n                  id=\\\"state\\\"\\n                  label=\\\"Select a state..\\\"\\n                  ariaLabel=\\\"Select a state..\\\"\\n                  items={[\\n                    \\\"AL\\\",\\n                    \\\"AK\\\",\\n                    \\\"AS\\\",\\n                    \\\"AZ\\\",\\n                    \\\"AR\\\",\\n                    \\\"CA\\\",\\n                    \\\"CO\\\",\\n                    \\\"CT\\\",\\n                    \\\"DE\\\",\\n                    \\\"DC\\\",\\n                    \\\"FM\\\",\\n                    \\\"FL\\\",\\n                    \\\"GA\\\",\\n                    \\\"GU\\\",\\n                    \\\"HI\\\",\\n                    \\\"ID\\\",\\n                    \\\"IL\\\",\\n                    \\\"IN\\\",\\n                    \\\"IA\\\",\\n                    \\\"KS\\\",\\n                    \\\"KY\\\",\\n                    \\\"LA\\\",\\n                    \\\"ME\\\",\\n                    \\\"MH\\\",\\n                    \\\"MD\\\",\\n                    \\\"MA\\\",\\n                    \\\"MI\\\",\\n                    \\\"MN\\\",\\n                    \\\"MS\\\",\\n                    \\\"MO\\\",\\n                    \\\"MT\\\",\\n                    \\\"NE\\\",\\n                    \\\"NV\\\",\\n                    \\\"NH\\\",\\n                    \\\"NJ\\\",\\n                    \\\"NM\\\",\\n                    \\\"NY\\\",\\n                    \\\"NC\\\",\\n                    \\\"ND\\\",\\n                    \\\"MP\\\",\\n                    \\\"OH\\\",\\n                    \\\"OK\\\",\\n                    \\\"OR\\\",\\n                    \\\"PW\\\",\\n                    \\\"PA\\\",\\n                    \\\"PR\\\",\\n                    \\\"RI\\\",\\n                    \\\"SC\\\",\\n                    \\\"SD\\\",\\n                    \\\"TN\\\",\\n                    \\\"TX\\\",\\n                    \\\"UT\\\",\\n                    \\\"VT\\\",\\n                    \\\"VI\\\",\\n                    \\\"VA\\\",\\n                    \\\"WA\\\",\\n                    \\\"WV\\\",\\n                    \\\"WI\\\",\\n                    \\\"WY\\\",\\n                    \\\"Other\\\"\\n                  ]}\\n                  selectedItem={this.state.state}\\n                  onChange={this.saveDataDropdown1}\\n                />\\n                {this.state.stateInvalid && (\\n                  <p className=\\\"dropdown-invalid\\\">Please select a state..</p>\\n                )}\\n                <br />\\n                <br />\\n                <TextInput\\n                  id=\\\"zipCode\\\"\\n                  name=\\\"zipCode\\\"\\n                  value={this.state.zipCode || \\\"\\\"}\\n                  onChange={this.saveData}\\n                  labelText=\\\"Zip Code\\\"\\n                  maxLength=\\\"20\\\"\\n                  invalid={this.state.zipCodeInvalid}\\n                  invalidText=\\\"Please enter a valid zip code..\\\"\\n                />\\n                <br />\\n                <br />\\n                <p className=\\\"bx--label left-align\\\">Country</p>\\n                <DropdownV2\\n                  id=\\\"country\\\"\\n                  label=\\\"Select a country..\\\"\\n                  ariaLabel=\\\"Select a country..\\\"\\n                  items={[\\\"United States\\\", \\\"Other\\\"]}\\n                  selectedItem={this.state.country}\\n                  onChange={this.saveDataDropdown2}\\n                />\\n                {this.state.countryInvalid && (\\n                  <p className=\\\"dropdown-invalid\\\">Please select a country..</p>\\n                )}\\n                <br />\\n                <br />\\n                <div className=\\\"left-align\\\">\\n                  <Button onClick={this.saveForm}>Update</Button>\\n                </div>\\n              </Form>\\n            </Tile>\\n          </div>\\n        </div>\\n        <br />\\n        <br />\\n        {Object.keys(this.state.dataToSave).length > 0 && (\\n          <div className=\\\"bx--row\\\">\\n            <div className=\\\"bx--col-xs-12 left-align\\\">\\n              <Tile>\\n                {Object.keys(this.state.dataToSave).map(item => (\\n                  <p key={item}>\\n                    &nbsp;&nbsp;\\n                    <strong>\\n                      {item.charAt(0).toUpperCase() +\\n                        item.slice(1).replace(/([A-Z])/g, \\\" $1\\\")}\\n                      :\\n                    </strong>{\\\" \\\"}\\n                    {this.state.dataToSave[item]}\\n                  </p>\\n                ))}\\n              </Tile>\\n              <br />\\n              <br />\\n            </div>\\n          </div>\\n        )}\\n      </div>\\n    );\\n  }\\n}\\nexport default UpdateForm;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport {\\n  TextInput,\\n  Form,\\n  DropdownV2,\\n  Button,\\n  Tile,\\n  Tabs,\\n  Tab\\n} from \\\"carbon-components-react\\\";\\nimport Header from \\\"./Header\\\";\\nimport \\\"./patterns.scss\\\";\\n\\nlet checkFlag = true;\\n\\nclass ValidatingFormWizard1 extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      dataToSave: {},\\n      selectedTab: 0\\n    };\\n  }\\n\\n  onSelectionChange = tabId => {\\n    this.setState({ selectedTab: tabId });\\n  };\\n\\n  nextTab = () => {\\n    if (this.checkFormTab1()) {\\n      this.setState(prevState => ({ selectedTab: prevState.selectedTab + 1 }));\\n    }\\n  };\\n\\n  saveData = event => {\\n    const target = event.target;\\n    let fieldName = target.name;\\n    let fieldValue = target.value;\\n    if (!fieldValue) {\\n      this.setState({ [fieldName]: fieldValue, [fieldName + \\\"Invalid\\\"]: true });\\n    } else {\\n      this.setState({\\n        [fieldName]: fieldValue,\\n        [fieldName + \\\"Invalid\\\"]: false\\n      });\\n    }\\n  };\\n\\n  saveDataDropdown1 = ({ selectedItem }) => {\\n    this.setState({ state: selectedItem, stateInvalid: false });\\n  };\\n\\n  saveDataDropdown2 = ({ selectedItem }) => {\\n    this.setState({ country: selectedItem, countryInvalid: false });\\n  };\\n\\n  checkFormTab1 = () => {\\n    checkFlag = true;\\n    if (!this.state.firstName) {\\n      this.setState({ firstNameInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.lastName) {\\n      this.setState({ lastNameInvalid: true });\\n      checkFlag = false;\\n    }\\n    return checkFlag;\\n  };\\n\\n  checkForm = () => {\\n    checkFlag = true;\\n    if (!this.state.firstName) {\\n      this.setState({ firstNameInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.lastName) {\\n      this.setState({ lastNameInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.streetAddress) {\\n      this.setState({ streetAddressInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.city) {\\n      this.setState({ cityInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.state) {\\n      this.setState({ stateInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (\\n      !this.state.zipCode ||\\n      (this.state.country === \\\"United States\\\" &&\\n        !/(^\\\\d{5}$)|(^\\\\d{5}-\\\\d{4}$)/.test(this.state.zipCode))\\n    ) {\\n      this.setState({ zipCodeInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.country) {\\n      this.setState({ countryInvalid: true });\\n      checkFlag = false;\\n    }\\n    return checkFlag;\\n  };\\n\\n  saveForm = event => {\\n    event.preventDefault();\\n    if (this.checkForm()) {\\n      let dataToSave = {\\n        firstName: this.state.firstName,\\n        middleName: this.state.middleName,\\n        lastName: this.state.lastName,\\n        streetAddress: this.state.streetAddress,\\n        city: this.state.city,\\n        state: this.state.state,\\n        zipCode: this.state.zipCode,\\n        country: this.state.country\\n      };\\n      this.setState({ dataToSave });\\n    }\\n  };\\n\\n  render() {\\n    return (\\n      <div className=\\\"bx--grid pattern-container\\\">\\n        <Header\\n          title=\\\"Validating Form Wizard 1\\\"\\n          subtitle=\\\"The Validating Form Wizard is based on the Validating Form pattern but displays a large form in the style of Paged Wizard, Tabbed Page or Individual Pages. This will depend on the channel device characteristics.\\\"\\n        />\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            <Tile>\\n              <Form>\\n                <Tabs\\n                  selected={this.state.selectedTab}\\n                  onSelectionChange={this.onSelectionChange}\\n                >\\n                  <Tab label=\\\"Name\\\">\\n                    <div>\\n                      <br />\\n                      <TextInput\\n                        id=\\\"firstName\\\"\\n                        name=\\\"firstName\\\"\\n                        value={this.state.firstName || \\\"\\\"}\\n                        onChange={this.saveData}\\n                        labelText=\\\"First Name\\\"\\n                        maxLength=\\\"100\\\"\\n                        invalid={this.state.firstNameInvalid}\\n                        invalidText=\\\"Please enter a first name..\\\"\\n                      />\\n                      <br />\\n                      <br />\\n                      <TextInput\\n                        id=\\\"middleName\\\"\\n                        name=\\\"middleName\\\"\\n                        value={this.state.middleName || \\\"\\\"}\\n                        onChange={this.saveData}\\n                        labelText=\\\"Middle Name\\\"\\n                        maxLength=\\\"100\\\"\\n                      />\\n                      <br />\\n                      <br />\\n                      <TextInput\\n                        id=\\\"lastName\\\"\\n                        name=\\\"lastName\\\"\\n                        value={this.state.lastName || \\\"\\\"}\\n                        onChange={this.saveData}\\n                        labelText=\\\"Last Name\\\"\\n                        maxLength=\\\"100\\\"\\n                        invalid={this.state.lastNameInvalid}\\n                        invalidText=\\\"Please enter a last name..\\\"\\n                      />\\n                      <br />\\n                      <br />\\n                      <div className=\\\"left-align\\\">\\n                        <Button onClick={this.nextTab}>Next</Button>\\n                      </div>\\n                    </div>\\n                  </Tab>\\n                  <Tab label=\\\"Address\\\">\\n                    <div>\\n                      <br />\\n                      <TextInput\\n                        id=\\\"streetAddress\\\"\\n                        name=\\\"streetAddress\\\"\\n                        value={this.state.streetAddress || \\\"\\\"}\\n                        onChange={this.saveData}\\n                        labelText=\\\"Street Address\\\"\\n                        maxLength=\\\"200\\\"\\n                        invalid={this.state.streetAddressInvalid}\\n                        invalidText=\\\"Please enter an address..\\\"\\n                      />\\n                      <br />\\n                      <br />\\n                      <TextInput\\n                        id=\\\"city\\\"\\n                        name=\\\"city\\\"\\n                        value={this.state.city || \\\"\\\"}\\n                        onChange={this.saveData}\\n                        labelText=\\\"City\\\"\\n                        maxLength=\\\"100\\\"\\n                        invalid={this.state.cityInvalid}\\n                        invalidText=\\\"Please enter a city..\\\"\\n                      />\\n                      <br />\\n                      <br />\\n                      <p className=\\\"bx--label left-align\\\">State</p>\\n                      <DropdownV2\\n                        id=\\\"state\\\"\\n                        label=\\\"Select a state..\\\"\\n                        ariaLabel=\\\"Select a state..\\\"\\n                        items={[\\n                          \\\"AL\\\",\\n                          \\\"AK\\\",\\n                          \\\"AS\\\",\\n                          \\\"AZ\\\",\\n                          \\\"AR\\\",\\n                          \\\"CA\\\",\\n                          \\\"CO\\\",\\n                          \\\"CT\\\",\\n                          \\\"DE\\\",\\n                          \\\"DC\\\",\\n                          \\\"FM\\\",\\n                          \\\"FL\\\",\\n                          \\\"GA\\\",\\n                          \\\"GU\\\",\\n                          \\\"HI\\\",\\n                          \\\"ID\\\",\\n                          \\\"IL\\\",\\n                          \\\"IN\\\",\\n                          \\\"IA\\\",\\n                          \\\"KS\\\",\\n                          \\\"KY\\\",\\n                          \\\"LA\\\",\\n                          \\\"ME\\\",\\n                          \\\"MH\\\",\\n                          \\\"MD\\\",\\n                          \\\"MA\\\",\\n                          \\\"MI\\\",\\n                          \\\"MN\\\",\\n                          \\\"MS\\\",\\n                          \\\"MO\\\",\\n                          \\\"MT\\\",\\n                          \\\"NE\\\",\\n                          \\\"NV\\\",\\n                          \\\"NH\\\",\\n                          \\\"NJ\\\",\\n                          \\\"NM\\\",\\n                          \\\"NY\\\",\\n                          \\\"NC\\\",\\n                          \\\"ND\\\",\\n                          \\\"MP\\\",\\n                          \\\"OH\\\",\\n                          \\\"OK\\\",\\n                          \\\"OR\\\",\\n                          \\\"PW\\\",\\n                          \\\"PA\\\",\\n                          \\\"PR\\\",\\n                          \\\"RI\\\",\\n                          \\\"SC\\\",\\n                          \\\"SD\\\",\\n                          \\\"TN\\\",\\n                          \\\"TX\\\",\\n                          \\\"UT\\\",\\n                          \\\"VT\\\",\\n                          \\\"VI\\\",\\n                          \\\"VA\\\",\\n                          \\\"WA\\\",\\n                          \\\"WV\\\",\\n                          \\\"WI\\\",\\n                          \\\"WY\\\",\\n                          \\\"Other\\\"\\n                        ]}\\n                        selectedItem={this.state.state}\\n                        onChange={this.saveDataDropdown1}\\n                      />\\n                      {this.state.stateInvalid && (\\n                        <p className=\\\"dropdown-invalid\\\">\\n                          Please select a state..\\n                        </p>\\n                      )}\\n                      <br />\\n                      <br />\\n                      <TextInput\\n                        id=\\\"zipCode\\\"\\n                        name=\\\"zipCode\\\"\\n                        value={this.state.zipCode || \\\"\\\"}\\n                        onChange={this.saveData}\\n                        labelText=\\\"Zip Code\\\"\\n                        maxLength=\\\"20\\\"\\n                        invalid={this.state.zipCodeInvalid}\\n                        invalidText=\\\"Please enter a valid zip code..\\\"\\n                      />\\n                      <br />\\n                      <br />\\n                      <p className=\\\"bx--label left-align\\\">Country</p>\\n                      <DropdownV2\\n                        id=\\\"country\\\"\\n                        label=\\\"Select a country..\\\"\\n                        ariaLabel=\\\"Select a country..\\\"\\n                        items={[\\\"United States\\\", \\\"Other\\\"]}\\n                        selectedItem={this.state.country}\\n                        onChange={this.saveDataDropdown2}\\n                      />\\n                      {this.state.countryInvalid && (\\n                        <p className=\\\"dropdown-invalid\\\">\\n                          Please select a country..\\n                        </p>\\n                      )}\\n                      <br />\\n                      <br />\\n                      <div className=\\\"left-align\\\">\\n                        <Button onClick={this.saveForm}>Submit</Button>\\n                      </div>\\n                    </div>\\n                  </Tab>\\n                </Tabs>\\n              </Form>\\n            </Tile>\\n          </div>\\n        </div>\\n        <br />\\n        <br />\\n        {Object.keys(this.state.dataToSave).length > 0 && (\\n          <div className=\\\"bx--row\\\">\\n            <div className=\\\"bx--col-xs-12 left-align\\\">\\n              <Tile>\\n                {Object.keys(this.state.dataToSave).map(item => (\\n                  <p>\\n                    &nbsp;&nbsp;\\n                    <strong>\\n                      {item.charAt(0).toUpperCase() +\\n                        item.slice(1).replace(/([A-Z])/g, \\\" $1\\\")}\\n                      :\\n                    </strong>{\\\" \\\"}\\n                    {this.state.dataToSave[item]}\\n                  </p>\\n                ))}\\n              </Tile>\\n              <br />\\n              <br />\\n            </div>\\n          </div>\\n        )}\\n      </div>\\n    );\\n  }\\n}\\nexport default ValidatingFormWizard1;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport {\\n  TextInput,\\n  Form,\\n  DropdownV2,\\n  Button,\\n  Tile\\n} from \\\"carbon-components-react\\\";\\nimport Header from \\\"./Header\\\";\\nimport \\\"./patterns.scss\\\";\\n\\nlet checkFlag = true;\\n\\nclass ValidatingFormWizard2 extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      dataToSave: {},\\n      selectedTab: 0\\n    };\\n  }\\n\\n  prevTab = () => {\\n    this.setState(prevState => ({ selectedTab: prevState.selectedTab - 1 }));\\n  };\\n\\n  nextTab = () => {\\n    if (this.checkFormTab1()) {\\n      this.setState(prevState => ({ selectedTab: prevState.selectedTab + 1 }));\\n    }\\n  };\\n\\n  saveData = event => {\\n    const target = event.target;\\n    let fieldName = target.name;\\n    let fieldValue = target.value;\\n    if (!fieldValue) {\\n      this.setState({ [fieldName]: fieldValue, [fieldName + \\\"Invalid\\\"]: true });\\n    } else {\\n      this.setState({\\n        [fieldName]: fieldValue,\\n        [fieldName + \\\"Invalid\\\"]: false\\n      });\\n    }\\n  };\\n\\n  saveDataDropdown1 = ({ selectedItem }) => {\\n    this.setState({ state: selectedItem, stateInvalid: false });\\n  };\\n\\n  saveDataDropdown2 = ({ selectedItem }) => {\\n    this.setState({ country: selectedItem, countryInvalid: false });\\n  };\\n\\n  checkFormTab1 = () => {\\n    checkFlag = true;\\n    if (!this.state.firstName) {\\n      this.setState({ firstNameInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.lastName) {\\n      this.setState({ lastNameInvalid: true });\\n      checkFlag = false;\\n    }\\n    return checkFlag;\\n  };\\n\\n  checkForm = () => {\\n    checkFlag = true;\\n    if (!this.state.firstName) {\\n      this.setState({ firstNameInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.lastName) {\\n      this.setState({ lastNameInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.streetAddress) {\\n      this.setState({ streetAddressInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.city) {\\n      this.setState({ cityInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.state) {\\n      this.setState({ stateInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (\\n      !this.state.zipCode ||\\n      (this.state.country === \\\"United States\\\" &&\\n        !/(^\\\\d{5}$)|(^\\\\d{5}-\\\\d{4}$)/.test(this.state.zipCode))\\n    ) {\\n      this.setState({ zipCodeInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.country) {\\n      this.setState({ countryInvalid: true });\\n      checkFlag = false;\\n    }\\n    return checkFlag;\\n  };\\n\\n  saveForm = event => {\\n    event.preventDefault();\\n    if (this.checkForm()) {\\n      let dataToSave = {\\n        firstName: this.state.firstName,\\n        middleName: this.state.middleName,\\n        lastName: this.state.lastName,\\n        streetAddress: this.state.streetAddress,\\n        city: this.state.city,\\n        state: this.state.state,\\n        zipCode: this.state.zipCode,\\n        country: this.state.country\\n      };\\n      this.setState({ dataToSave });\\n    }\\n  };\\n\\n  render() {\\n    return (\\n      <div className=\\\"bx--grid pattern-container\\\">\\n        <Header\\n          title=\\\"Validating Form Wizard 2\\\"\\n          subtitle=\\\"The Validating Form Wizard is based on the Validating Form pattern but displays a large form in the style of Paged Wizard, Tabbed Page or Individual Pages. This will depend on the channel device characteristics.\\\"\\n        />\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            <Tile>\\n              <Form>\\n                {this.state.selectedTab === 0 && (\\n                  <div>\\n                    <br />\\n                    <TextInput\\n                      id=\\\"firstName\\\"\\n                      name=\\\"firstName\\\"\\n                      value={this.state.firstName || \\\"\\\"}\\n                      onChange={this.saveData}\\n                      labelText=\\\"First Name\\\"\\n                      maxLength=\\\"100\\\"\\n                      invalid={this.state.firstNameInvalid}\\n                      invalidText=\\\"Please enter a first name..\\\"\\n                    />\\n                    <br />\\n                    <br />\\n                    <TextInput\\n                      id=\\\"middleName\\\"\\n                      name=\\\"middleName\\\"\\n                      value={this.state.middleName || \\\"\\\"}\\n                      onChange={this.saveData}\\n                      labelText=\\\"Middle Name\\\"\\n                      maxLength=\\\"100\\\"\\n                    />\\n                    <br />\\n                    <br />\\n                    <TextInput\\n                      id=\\\"lastName\\\"\\n                      name=\\\"lastName\\\"\\n                      value={this.state.lastName || \\\"\\\"}\\n                      onChange={this.saveData}\\n                      labelText=\\\"Last Name\\\"\\n                      maxLength=\\\"100\\\"\\n                      invalid={this.state.lastNameInvalid}\\n                      invalidText=\\\"Please enter a last name..\\\"\\n                    />\\n                    <br />\\n                    <br />\\n                    <div className=\\\"left-align\\\">\\n                      Page 1 of 2\\n                      <br />\\n                      <br />\\n                      <Button onClick={this.nextTab}>Next</Button>\\n                    </div>\\n                  </div>\\n                )}\\n                {this.state.selectedTab === 1 && (\\n                  <div>\\n                    <br />\\n                    <TextInput\\n                      id=\\\"streetAddress\\\"\\n                      name=\\\"streetAddress\\\"\\n                      value={this.state.streetAddress || \\\"\\\"}\\n                      onChange={this.saveData}\\n                      labelText=\\\"Street Address\\\"\\n                      maxLength=\\\"200\\\"\\n                      invalid={this.state.streetAddressInvalid}\\n                      invalidText=\\\"Please enter an address..\\\"\\n                    />\\n                    <br />\\n                    <br />\\n                    <TextInput\\n                      id=\\\"city\\\"\\n                      name=\\\"city\\\"\\n                      value={this.state.city || \\\"\\\"}\\n                      onChange={this.saveData}\\n                      labelText=\\\"City\\\"\\n                      maxLength=\\\"100\\\"\\n                      invalid={this.state.cityInvalid}\\n                      invalidText=\\\"Please enter a city..\\\"\\n                    />\\n                    <br />\\n                    <br />\\n                    <p className=\\\"bx--label left-align\\\">State</p>\\n                    <DropdownV2\\n                      id=\\\"state\\\"\\n                      label=\\\"Select a state..\\\"\\n                      ariaLabel=\\\"Select a state..\\\"\\n                      items={[\\n                        \\\"AL\\\",\\n                        \\\"AK\\\",\\n                        \\\"AS\\\",\\n                        \\\"AZ\\\",\\n                        \\\"AR\\\",\\n                        \\\"CA\\\",\\n                        \\\"CO\\\",\\n                        \\\"CT\\\",\\n                        \\\"DE\\\",\\n                        \\\"DC\\\",\\n                        \\\"FM\\\",\\n                        \\\"FL\\\",\\n                        \\\"GA\\\",\\n                        \\\"GU\\\",\\n                        \\\"HI\\\",\\n                        \\\"ID\\\",\\n                        \\\"IL\\\",\\n                        \\\"IN\\\",\\n                        \\\"IA\\\",\\n                        \\\"KS\\\",\\n                        \\\"KY\\\",\\n                        \\\"LA\\\",\\n                        \\\"ME\\\",\\n                        \\\"MH\\\",\\n                        \\\"MD\\\",\\n                        \\\"MA\\\",\\n                        \\\"MI\\\",\\n                        \\\"MN\\\",\\n                        \\\"MS\\\",\\n                        \\\"MO\\\",\\n                        \\\"MT\\\",\\n                        \\\"NE\\\",\\n                        \\\"NV\\\",\\n                        \\\"NH\\\",\\n                        \\\"NJ\\\",\\n                        \\\"NM\\\",\\n                        \\\"NY\\\",\\n                        \\\"NC\\\",\\n                        \\\"ND\\\",\\n                        \\\"MP\\\",\\n                        \\\"OH\\\",\\n                        \\\"OK\\\",\\n                        \\\"OR\\\",\\n                        \\\"PW\\\",\\n                        \\\"PA\\\",\\n                        \\\"PR\\\",\\n                        \\\"RI\\\",\\n                        \\\"SC\\\",\\n                        \\\"SD\\\",\\n                        \\\"TN\\\",\\n                        \\\"TX\\\",\\n                        \\\"UT\\\",\\n                        \\\"VT\\\",\\n                        \\\"VI\\\",\\n                        \\\"VA\\\",\\n                        \\\"WA\\\",\\n                        \\\"WV\\\",\\n                        \\\"WI\\\",\\n                        \\\"WY\\\",\\n                        \\\"Other\\\"\\n                      ]}\\n                      selectedItem={this.state.state}\\n                      onChange={this.saveDataDropdown1}\\n                    />\\n                    {this.state.stateInvalid && (\\n                      <p className=\\\"dropdown-invalid\\\">\\n                        Please select a state..\\n                      </p>\\n                    )}\\n                    <br />\\n                    <br />\\n                    <TextInput\\n                      id=\\\"zipCode\\\"\\n                      name=\\\"zipCode\\\"\\n                      value={this.state.zipCode || \\\"\\\"}\\n                      onChange={this.saveData}\\n                      labelText=\\\"Zip Code\\\"\\n                      maxLength=\\\"20\\\"\\n                      invalid={this.state.zipCodeInvalid}\\n                      invalidText=\\\"Please enter a valid zip code..\\\"\\n                    />\\n                    <br />\\n                    <br />\\n                    <p className=\\\"bx--label left-align\\\">Country</p>\\n                    <DropdownV2\\n                      id=\\\"country\\\"\\n                      label=\\\"Select a country..\\\"\\n                      ariaLabel=\\\"Select a country..\\\"\\n                      items={[\\\"United States\\\", \\\"Other\\\"]}\\n                      selectedItem={this.state.country}\\n                      onChange={this.saveDataDropdown2}\\n                    />\\n                    {this.state.countryInvalid && (\\n                      <p className=\\\"dropdown-invalid\\\">\\n                        Please select a country..\\n                      </p>\\n                    )}\\n                    <br />\\n                    <br />\\n                    <div className=\\\"left-align\\\">\\n                      Page 2 of 2\\n                      <br />\\n                      <br />\\n                      <Button onClick={this.prevTab}>Previous</Button>\\n                      &nbsp;&nbsp;&nbsp;&nbsp;\\n                      <Button onClick={this.saveForm}>Submit</Button>\\n                    </div>\\n                  </div>\\n                )}\\n              </Form>\\n            </Tile>\\n          </div>\\n        </div>\\n        <br />\\n        <br />\\n        {Object.keys(this.state.dataToSave).length > 0 && (\\n          <div className=\\\"bx--row\\\">\\n            <div className=\\\"bx--col-xs-12 left-align\\\">\\n              <Tile>\\n                {Object.keys(this.state.dataToSave).map(item => (\\n                  <p>\\n                    &nbsp;&nbsp;\\n                    <strong>\\n                      {item.charAt(0).toUpperCase() +\\n                        item.slice(1).replace(/([A-Z])/g, \\\" $1\\\")}\\n                      :\\n                    </strong>{\\\" \\\"}\\n                    {this.state.dataToSave[item]}\\n                  </p>\\n                ))}\\n              </Tile>\\n              <br />\\n              <br />\\n            </div>\\n          </div>\\n        )}\\n      </div>\\n    );\\n  }\\n}\\nexport default ValidatingFormWizard2;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport {\\n  StructuredListWrapper,\\n  StructuredListRow,\\n  StructuredListCell,\\n  StructuredListHead,\\n  StructuredListBody,\\n  StructuredListInput,\\n  Icon\\n} from \\\"carbon-components-react\\\";\\nimport { iconCheckmarkSolid } from \\\"carbon-icons\\\";\\nimport Header from \\\"./Header\\\";\\nimport \\\"./patterns.scss\\\";\\n\\nclass SimpleList extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      selectedRow: 0\\n    };\\n  }\\n\\n  onRowClick = id => {\\n    this.setState({ selectedRow: id });\\n  };\\n\\n  renderRow = (row, id) => {\\n    return (\\n      <StructuredListRow key={id} onClick={() => this.onRowClick(id)}>\\n        <div>\\n          <StructuredListInput\\n            id={`row-${id}`}\\n            value=\\\"row-0\\\"\\n            title=\\\"row-0\\\"\\n            name=\\\"row-0\\\"\\n            //defaultChecked={this.state.selectedRow === id}\\n            checked={this.state.selectedRow === id}\\n          />\\n          <StructuredListCell>\\n            <Icon\\n              className=\\\"bx--structured-list-svg\\\"\\n              icon={iconCheckmarkSolid}\\n            />\\n          </StructuredListCell>\\n        </div>\\n\\n        <StructuredListCell className=\\\"simple-list-row\\\">\\n          {row}\\n        </StructuredListCell>\\n      </StructuredListRow>\\n    );\\n  };\\n\\n  render() {\\n    const data = [\\\"row1\\\", \\\"row2\\\", \\\"row3\\\"];\\n    return (\\n      <div className=\\\"bx--grid pattern-container\\\">\\n        <Header\\n          title=\\\"Simple List\\\"\\n          subtitle=\\\"This pattern will display an array of model objects in a simple list column list.\\\"\\n        />\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            <StructuredListWrapper selection border>\\n              <StructuredListHead>\\n                <StructuredListRow head>\\n                  <StructuredListCell head />\\n                  <StructuredListCell head>\\n                    Simple List Title\\n                  </StructuredListCell>\\n                </StructuredListRow>\\n              </StructuredListHead>\\n\\n              <StructuredListBody>\\n                {data.map((row, i) => {\\n                  return this.renderRow(row, i);\\n                })}\\n              </StructuredListBody>\\n            </StructuredListWrapper>\\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default SimpleList;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport {\\n  StructuredListWrapper,\\n  StructuredListRow,\\n  StructuredListCell,\\n  StructuredListHead,\\n  StructuredListBody,\\n  StructuredListInput,\\n  Icon\\n} from \\\"carbon-components-react\\\";\\nimport { iconCheckmarkSolid } from \\\"carbon-icons\\\";\\nimport Header from \\\"./Header\\\";\\nimport \\\"./patterns.scss\\\";\\n\\nclass TableList extends Component {\\n  title = 'Table List';\\n  subtitle = 'This pattern will display and array of model objects in a multi column grid/table.';\\n\\n  columns = ['Name', 'Address', 'City', 'State', 'ZipCode', 'Country'];\\n  formatters = {\\n    'ZipCode': function(val) {\\n      return val + '-0000';\\n    }\\n  };\\n\\n  data = [\\n    {\\n      Name: \\\"Lin\\\",\\n      Address: \\\"123 Main Street\\\",\\n      City: \\\"Austin\\\",\\n      State: \\\"TX\\\",\\n      ZipCode: \\\"12345\\\",\\n      Country: \\\"United States\\\"\\n    },\\n    {\\n      Name: \\\"Mak\\\",\\n      Address: \\\"45 2nd Street\\\",\\n      City: \\\"Austin\\\",\\n      State: \\\"TX\\\",\\n      ZipCode: \\\"78766\\\",\\n      Country: \\\"United States\\\"\\n    },\\n    {\\n      Name: \\\"Joe\\\",\\n      Address: \\\"40 Down Street\\\",\\n      City: \\\"San Francisco\\\",\\n      State: \\\"CA\\\",\\n      ZipCode: \\\"90706\\\",\\n      Country: \\\"United States\\\"\\n    }\\n  ];\\n\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      data: [],\\n      selectedRow: 0,\\n    };\\n  }\\n\\n  async componentDidMount() {\\n\\n    this.setState({\\n      data: this.data,\\n    })\\n  }\\n\\n  onRowClick = id => {\\n    this.setState({ selectedRow: id });\\n  };\\n\\n  renderRow = (row, id) => {\\n    return (\\n      <StructuredListRow key={id} onClick={() => this.onRowClick(id)}>\\n        <div>\\n          <StructuredListInput\\n            id={`row-${id}`}\\n            value=\\\"row-0\\\"\\n            title=\\\"row-0\\\"\\n            name=\\\"row-0\\\"\\n            //defaultChecked={this.state.selectedRow === id}\\n            checked={this.state.selectedRow === id}\\n          />\\n          <StructuredListCell>\\n            <Icon\\n              className=\\\"bx--structured-list-svg\\\"\\n              icon={iconCheckmarkSolid}\\n            />\\n          </StructuredListCell>\\n        </div>\\n        {this.columns.map(col => {\\n          const format = this.formatters[col] || function(val) { return val; };\\n\\n          return (\\n            <StructuredListCell key={col} className=\\\"simple-list-row\\\">\\n              {format(row[col])}\\n            </StructuredListCell>\\n          );\\n        })}\\n      </StructuredListRow>\\n    );\\n  };\\n\\n  render() {\\n    const data = this.state.data;\\n\\n    return (\\n      <div className=\\\"bx--grid pattern-container\\\">\\n        <Header\\n          title={this.title}\\n          subtitle={this.subtitle}\\n        />\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            <StructuredListWrapper selection border>\\n              <StructuredListHead>\\n                <StructuredListRow head>\\n                  <StructuredListCell head />\\n                  {this.columns.map(key => {\\n                    return (\\n                      <StructuredListCell head key={key}>\\n                        {key.charAt(0).toUpperCase() +\\n                          key.slice(1).replace(/([A-Z])/g, \\\" $1\\\")}\\n                      </StructuredListCell>\\n                    );\\n                  })}\\n                </StructuredListRow>\\n              </StructuredListHead>\\n\\n              <StructuredListBody>\\n                {data.map((row, i) => {\\n                  return this.renderRow(row, i);\\n                })}\\n              </StructuredListBody>\\n            </StructuredListWrapper>\\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default TableList;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport { DataTable, Button } from \\\"carbon-components-react\\\";\\nimport Header from \\\"./Header\\\";\\nimport \\\"./patterns.scss\\\";\\n\\nconst {\\n  Table,\\n  TableBody,\\n  TableCell,\\n  TableContainer,\\n  TableHead,\\n  TableHeader,\\n  TableRow,\\n  TableSelectAll,\\n  TableSelectRow\\n} = DataTable;\\n\\nclass ListToList extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      rowsListA: [\\n        {\\n          id: \\\"aa\\\",\\n          name: \\\"Load Balancer 1\\\",\\n          port: 25\\n        },\\n        {\\n          id: \\\"ab\\\",\\n          name: \\\"Load Balancer 2\\\",\\n          port: 80\\n        },\\n        {\\n          id: \\\"ac\\\",\\n          name: \\\"Load Balancer 3\\\",\\n          port: 443\\n        }\\n      ],\\n      rowsListB: [\\n        {\\n          id: \\\"ba\\\",\\n          name: \\\"Load Balancer 4\\\",\\n          port: 3000\\n        },\\n        {\\n          id: \\\"bb\\\",\\n          name: \\\"Load Balancer 5\\\",\\n          port: 4000\\n        },\\n        {\\n          id: \\\"bc\\\",\\n          name: \\\"Load Balancer 6\\\",\\n          port: 5000\\n        }\\n      ],\\n      headers: [\\n        {\\n          key: \\\"name\\\",\\n          header: \\\"Name\\\"\\n        },\\n        {\\n          key: \\\"port\\\",\\n          header: \\\"Port\\\"\\n        }\\n      ]\\n    };\\n  }\\n\\n  selectedRowsListA = [];\\n  selectedRowsListB = [];\\n\\n  moveFromListAToB = event => {\\n    let rowsListA = this.state.rowsListA.slice();\\n    let rowsListB = this.state.rowsListB.slice();\\n    this.selectedRowsListA.forEach(elem => {\\n      rowsListA = rowsListA.filter(item => {\\n        if (item.id !== elem.id) {\\n          return true;\\n        } else {\\n          rowsListB.push(item);\\n          return false;\\n        }\\n      });\\n    });\\n    this.setState({ rowsListA, rowsListB });\\n  };\\n\\n  moveFromListBToA = event => {\\n    let rowsListA = this.state.rowsListA.slice();\\n    let rowsListB = this.state.rowsListB.slice();\\n    this.selectedRowsListB.forEach(elem => {\\n      rowsListB = rowsListB.filter(item => {\\n        if (item.id !== elem.id) {\\n          return true;\\n        } else {\\n          rowsListA.push(item);\\n          return false;\\n        }\\n      });\\n    });\\n    this.setState({ rowsListA, rowsListB });\\n  };\\n\\n  render() {\\n    return (\\n      <div className=\\\"bx--grid pattern-container\\\">\\n        <Header\\n          title=\\\"List To List\\\"\\n          subtitle=\\\"This pattern is based on a Simple list pattern but will display two lists and allow the moving of data from one list to another and back again.\\\"\\n        />\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12 bx--col-lg-5\\\">\\n            <DataTable\\n              rows={this.state.rowsListA}\\n              headers={this.state.headers}\\n              render={({\\n                rows,\\n                headers,\\n                getHeaderProps,\\n                getRowProps,\\n                getSelectionProps,\\n                selectedRows\\n              }) => {\\n                this.selectedRowsListA = selectedRows;\\n                return (\\n                  <TableContainer title=\\\"List A\\\">\\n                    <Table>\\n                      <TableHead>\\n                        <TableRow>\\n                          <TableSelectAll {...getSelectionProps()} />\\n                          {headers.map(header => (\\n                            <TableHeader {...getHeaderProps({ header })}>\\n                              {header.header}\\n                            </TableHeader>\\n                          ))}\\n                        </TableRow>\\n                      </TableHead>\\n                      <TableBody>\\n                        {rows.map(row => (\\n                          <TableRow {...getRowProps({ row })}>\\n                            <TableSelectRow {...getSelectionProps({ row })} />\\n                            {row.cells.map(cell => (\\n                              <TableCell key={cell.id}>{cell.value}</TableCell>\\n                            ))}\\n                          </TableRow>\\n                        ))}\\n                      </TableBody>\\n                    </Table>\\n                  </TableContainer>\\n                );\\n              }}\\n            />\\n          </div>\\n          <div className=\\\"bx--col-xs-12 bx--col-lg-2 list-to-list-moving-btn-container\\\">\\n            <div>\\n              <Button\\n                className=\\\"list-to-list-moving-btn\\\"\\n                onClick={this.moveFromListAToB}\\n              >\\n                &gt;&gt;\\n              </Button>\\n              <br />\\n              <Button\\n                className=\\\"list-to-list-moving-btn\\\"\\n                onClick={this.moveFromListBToA}\\n              >\\n                &lt;&lt;\\n              </Button>\\n            </div>\\n          </div>\\n          <div className=\\\"bx--col-xs-12 bx--col-lg-5\\\">\\n            <DataTable\\n              rows={this.state.rowsListB}\\n              headers={this.state.headers}\\n              render={({\\n                rows,\\n                headers,\\n                getHeaderProps,\\n                getRowProps,\\n                getSelectionProps,\\n                selectedRows\\n              }) => {\\n                this.selectedRowsListB = selectedRows;\\n                return (\\n                  <TableContainer title=\\\"List B\\\">\\n                    <Table>\\n                      <TableHead>\\n                        <TableRow>\\n                          <TableSelectAll {...getSelectionProps()} />\\n                          {headers.map(header => (\\n                            <TableHeader {...getHeaderProps({ header })}>\\n                              {header.header}\\n                            </TableHeader>\\n                          ))}\\n                        </TableRow>\\n                      </TableHead>\\n                      <TableBody>\\n                        {rows.map(row => (\\n                          <TableRow {...getRowProps({ row })}>\\n                            <TableSelectRow {...getSelectionProps({ row })} />\\n                            {row.cells.map(cell => (\\n                              <TableCell key={cell.id}>{cell.value}</TableCell>\\n                            ))}\\n                          </TableRow>\\n                        ))}\\n                      </TableBody>\\n                    </Table>\\n                  </TableContainer>\\n                );\\n              }}\\n            />\\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\nexport default ListToList;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport { Form, DropdownV2, Button, Tile } from \\\"carbon-components-react\\\";\\nimport Header from \\\"./Header\\\";\\nimport \\\"./patterns.scss\\\";\\n\\nlet checkFlag = true;\\n\\nclass LinkedList extends Component {\\n  constructor(props) {\\n    super(props);\\n    const data = {\\n      \\\"United States\\\": {\\n        TX: [\\\"Austin\\\", \\\"Dallas\\\", \\\"Other\\\"],\\n        CA: [\\\"San Francisco\\\", \\\"Los Angeles\\\", \\\"Other\\\"],\\n        Other: [\\\"Other\\\"]\\n      },\\n      Mexico: {\\n        Aguascalientes: [\\\"Aguascalientes\\\", \\\"Calvillo\\\", \\\"Other\\\"],\\n        \\\"Baja California\\\": [\\\"Tijuana\\\", \\\"Mexicali\\\", \\\"Other\\\"],\\n        Other: [\\\"Other\\\"]\\n      }\\n    };\\n    this.state = {\\n      data,\\n      dataToSave: {},\\n      countryList: Object.keys(data),\\n      stateList: [],\\n      cityList: []\\n    };\\n  }\\n\\n  saveData = event => {\\n    const target = event.target;\\n    let fieldName = target.name;\\n    let fieldValue = target.value;\\n    if (!fieldValue) {\\n      this.setState({ [fieldName]: fieldValue, [fieldName + \\\"Invalid\\\"]: true });\\n    } else {\\n      this.setState({\\n        [fieldName]: fieldValue,\\n        [fieldName + \\\"Invalid\\\"]: false\\n      });\\n    }\\n  };\\n\\n  saveDataDropdown1 = ({ selectedItem }) => {\\n    this.setState({\\n      country: selectedItem,\\n      countryInvalid: false,\\n      state: \\\"\\\",\\n      city: \\\"\\\",\\n      stateList: Object.keys(this.state.data[selectedItem])\\n    });\\n  };\\n\\n  saveDataDropdown2 = ({ selectedItem }) => {\\n    this.setState({\\n      state: selectedItem,\\n      stateInvalid: false,\\n      city: \\\"\\\",\\n      cityList: this.state.data[this.state.country][selectedItem]\\n    });\\n  };\\n\\n  saveDataDropdown3 = ({ selectedItem }) => {\\n    this.setState({\\n      city: selectedItem,\\n      cityInvalid: false\\n    });\\n  };\\n\\n  checkForm = () => {\\n    checkFlag = true;\\n    if (!this.state.country) {\\n      this.setState({ countryInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.state) {\\n      this.setState({ stateInvalid: true });\\n      checkFlag = false;\\n    }\\n    if (!this.state.city) {\\n      this.setState({ cityInvalid: true });\\n      checkFlag = false;\\n    }\\n    return checkFlag;\\n  };\\n\\n  saveForm = event => {\\n    event.preventDefault();\\n    if (this.checkForm()) {\\n      let dataToSave = {\\n        country: this.state.country,\\n        state: this.state.state,\\n        city: this.state.city\\n      };\\n      this.setState({ dataToSave });\\n    }\\n  };\\n\\n  render() {\\n    return (\\n      <div className=\\\"bx--grid pattern-container\\\">\\n        <Header\\n          title=\\\"Linked List\\\"\\n          subtitle=\\\"This pattern will link multiple list or combo controls together so when a selection on one list is made it may change the information displayed in the other linked list.\\\"\\n        />\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            <Tile>\\n              <Form>\\n                <p className=\\\"bx--label left-align\\\">Country</p>\\n                <DropdownV2\\n                  id=\\\"country\\\"\\n                  label=\\\"Select a country..\\\"\\n                  ariaLabel=\\\"Select a country..\\\"\\n                  items={this.state.countryList}\\n                  selectedItem={this.state.country}\\n                  onChange={this.saveDataDropdown1}\\n                />\\n                {this.state.countryInvalid && (\\n                  <p className=\\\"dropdown-invalid\\\">Please select a country..</p>\\n                )}\\n                <br />\\n                <br />\\n                <p className=\\\"bx--label left-align\\\">State</p>\\n                <DropdownV2\\n                  id=\\\"state\\\"\\n                  label=\\\"Select a state..\\\"\\n                  ariaLabel=\\\"Select a state..\\\"\\n                  items={this.state.stateList}\\n                  selectedItem={this.state.state}\\n                  onChange={this.saveDataDropdown2}\\n                />\\n                {this.state.stateInvalid && (\\n                  <p className=\\\"dropdown-invalid\\\">Please select a state..</p>\\n                )}\\n                <br />\\n                <br />\\n                <p className=\\\"bx--label left-align\\\">City</p>\\n                <DropdownV2\\n                  id=\\\"city\\\"\\n                  label=\\\"Select a city..\\\"\\n                  ariaLabel=\\\"Select a city..\\\"\\n                  items={this.state.cityList}\\n                  selectedItem={this.state.city}\\n                  onChange={this.saveDataDropdown3}\\n                />\\n                {this.state.cityInvalid && (\\n                  <p className=\\\"dropdown-invalid\\\">Please select a city..</p>\\n                )}\\n                <br />\\n                <br />\\n                <div className=\\\"left-align\\\">\\n                  <Button onClick={this.saveForm}>Submit</Button>\\n                </div>\\n              </Form>\\n            </Tile>\\n          </div>\\n        </div>\\n        <br />\\n        <br />\\n        {Object.keys(this.state.dataToSave).length > 0 && (\\n          <div className=\\\"bx--row\\\">\\n            <div className=\\\"bx--col-xs-12 left-align\\\">\\n              <Tile>\\n                {Object.keys(this.state.dataToSave).map(item => (\\n                  <p key={item}>\\n                    &nbsp;&nbsp;\\n                    <strong>\\n                      {item.charAt(0).toUpperCase() + item.slice(1)}:\\n                    </strong>{\\\" \\\"}\\n                    {this.state.dataToSave[item]}\\n                  </p>\\n                ))}\\n              </Tile>\\n              <br />\\n              <br />\\n            </div>\\n          </div>\\n        )}\\n      </div>\\n    );\\n  }\\n}\\nexport default LinkedList;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport {\\n  StructuredListWrapper,\\n  StructuredListRow,\\n  StructuredListCell,\\n  StructuredListHead,\\n  StructuredListBody,\\n  StructuredListInput,\\n  Icon\\n} from \\\"carbon-components-react\\\";\\nimport { iconCheckmarkSolid } from \\\"carbon-icons\\\";\\nimport Header from \\\"./Header\\\";\\nimport DisplayForm from \\\"./DisplayForm\\\";\\nimport \\\"./patterns.scss\\\";\\n\\nclass MasterDetail extends Component {\\n  constructor(props) {\\n    super(props);\\n    const data = [\\n      [\\n        { label: \\\"Name\\\", value: \\\"Lin\\\", type: \\\"textinput\\\" },\\n        { label: \\\"Address\\\", value: \\\"123 Main Street\\\", type: \\\"textinput\\\" },\\n        { label: \\\"City\\\", value: \\\"Austin\\\", type: \\\"textinput\\\" },\\n        { label: \\\"State\\\", value: [\\\"TX\\\"], type: \\\"dropdown\\\" },\\n        { label: \\\"ZipCode\\\", value: \\\"12345\\\", type: \\\"textinput\\\" },\\n        { label: \\\"Country\\\", value: [\\\"United States\\\"], type: \\\"dropdown\\\" }\\n      ],\\n      [\\n        { label: \\\"Name\\\", value: \\\"Mak\\\", type: \\\"textinput\\\" },\\n        { label: \\\"Address\\\", value: \\\"45 2nd Street\\\", type: \\\"textinput\\\" },\\n        { label: \\\"City\\\", value: \\\"Austin\\\", type: \\\"textinput\\\" },\\n        { label: \\\"State\\\", value: [\\\"TX\\\"], type: \\\"dropdown\\\" },\\n        { label: \\\"ZipCode\\\", value: \\\"78766\\\", type: \\\"textinput\\\" },\\n        { label: \\\"Country\\\", value: [\\\"United States\\\"], type: \\\"dropdown\\\" }\\n      ],\\n      [\\n        { label: \\\"Name\\\", value: \\\"Joe\\\", type: \\\"textinput\\\" },\\n        { label: \\\"Address\\\", value: \\\"40 Down Street\\\", type: \\\"textinput\\\" },\\n        { label: \\\"City\\\", value: \\\"San Francisco\\\", type: \\\"textinput\\\" },\\n        { label: \\\"State\\\", value: [\\\"CA\\\"], type: \\\"dropdown\\\" },\\n        { label: \\\"ZipCode\\\", value: \\\"90706\\\", type: \\\"textinput\\\" },\\n        { label: \\\"Country\\\", value: [\\\"United States\\\"], type: \\\"dropdown\\\" }\\n      ]\\n    ];\\n    this.state = {\\n      selectedRow: 0,\\n      data\\n    };\\n  }\\n\\n  onRowClick = id => {\\n    this.setState({ selectedRow: id });\\n  };\\n\\n  renderRow = (row, id) => {\\n    return (\\n      <StructuredListRow key={id} onClick={() => this.onRowClick(id)}>\\n        <div>\\n          <StructuredListInput\\n            id={`row-${id}`}\\n            value=\\\"row-0\\\"\\n            title=\\\"row-0\\\"\\n            name=\\\"row-0\\\"\\n            checked={this.state.selectedRow === id}\\n          />\\n          <StructuredListCell>\\n            <Icon\\n              className=\\\"bx--structured-list-svg\\\"\\n              icon={iconCheckmarkSolid}\\n            />\\n          </StructuredListCell>\\n        </div>\\n        {Object.keys(row).map(col => {\\n          return (\\n            <StructuredListCell key={col} className=\\\"simple-list-row\\\">\\n              {row[col]}\\n            </StructuredListCell>\\n          );\\n        })}\\n      </StructuredListRow>\\n    );\\n  };\\n\\n  render() {\\n    const selectedRow = this.state.selectedRow;\\n    const data = this.state.data;\\n    const columns = data[selectedRow].map(item => item.label);\\n\\n    return (\\n      <div className=\\\"bx--grid \\\">\\n        <Header\\n          title=\\\"Master Detail\\\"\\n          subtitle=\\\"This pattern will use a simple list of table list and link to a display form.\\\"\\n        />\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            <StructuredListWrapper selection border>\\n              <StructuredListHead>\\n                <StructuredListRow head>\\n                  <StructuredListCell head />\\n                  {columns.map(key => {\\n                    return (\\n                      <StructuredListCell head key={key}>\\n                        {key.charAt(0).toUpperCase() +\\n                          key.slice(1).replace(/([A-Z])/g, \\\" $1\\\")}\\n                      </StructuredListCell>\\n                    );\\n                  })}\\n                </StructuredListRow>\\n              </StructuredListHead>\\n              <StructuredListBody>\\n                {data.map((row, i) => {\\n                  const values = row.map(item => item.value);\\n                  return this.renderRow(values, i);\\n                })}\\n              </StructuredListBody>\\n            </StructuredListWrapper>\\n          </div>\\n        </div>\\n        <DisplayForm data={data[selectedRow]} />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default MasterDetail;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport {\\n  StructuredListWrapper,\\n  StructuredListRow,\\n  StructuredListCell,\\n  StructuredListHead,\\n  StructuredListBody,\\n  StructuredListInput,\\n  Icon,\\n  Button\\n} from \\\"carbon-components-react\\\";\\nimport { iconCheckmarkSolid } from \\\"carbon-icons\\\";\\nimport Header from \\\"./Header\\\";\\nimport ValidatingForm from \\\"./ValidatingForm\\\";\\nimport \\\"./patterns.scss\\\";\\n\\nclass CreateReadUpdateDelete extends Component {\\n  constructor(props) {\\n    super(props);\\n    const data = [\\n      [\\n        { label: \\\"Name\\\", value: \\\"Lin\\\", type: \\\"textinput\\\" },\\n        { label: \\\"Address\\\", value: \\\"123 Main Street\\\", type: \\\"textinput\\\" },\\n        { label: \\\"City\\\", value: \\\"Austin\\\", type: \\\"textinput\\\" },\\n        { label: \\\"State\\\", value: [\\\"TX\\\"], type: \\\"dropdown\\\" },\\n        { label: \\\"ZipCode\\\", value: \\\"12345\\\", type: \\\"textinput\\\" },\\n        { label: \\\"Country\\\", value: [\\\"United States\\\"], type: \\\"dropdown\\\" }\\n      ],\\n      [\\n        { label: \\\"Name\\\", value: \\\"Mak\\\", type: \\\"textinput\\\" },\\n        { label: \\\"Address\\\", value: \\\"45 2nd Street\\\", type: \\\"textinput\\\" },\\n        { label: \\\"City\\\", value: \\\"Austin\\\", type: \\\"textinput\\\" },\\n        { label: \\\"State\\\", value: [\\\"TX\\\"], type: \\\"dropdown\\\" },\\n        { label: \\\"ZipCode\\\", value: \\\"78766\\\", type: \\\"textinput\\\" },\\n        { label: \\\"Country\\\", value: [\\\"United States\\\"], type: \\\"dropdown\\\" }\\n      ],\\n      [\\n        { label: \\\"Name\\\", value: \\\"Joe\\\", type: \\\"textinput\\\" },\\n        { label: \\\"Address\\\", value: \\\"40 Down Street\\\", type: \\\"textinput\\\" },\\n        { label: \\\"City\\\", value: \\\"San Francisco\\\", type: \\\"textinput\\\" },\\n        { label: \\\"State\\\", value: [\\\"CA\\\"], type: \\\"dropdown\\\" },\\n        { label: \\\"ZipCode\\\", value: \\\"90706\\\", type: \\\"textinput\\\" },\\n        { label: \\\"Country\\\", value: [\\\"United States\\\"], type: \\\"dropdown\\\" }\\n      ]\\n    ];\\n    this.state = {\\n      selectedRow: 0,\\n      data,\\n      adding: false\\n    };\\n  }\\n\\n  onRowClick = id => {\\n    this.setState({ selectedRow: id });\\n  };\\n\\n  addRow = () => {\\n    let data = this.state.data.slice();\\n    let selectedRow = this.state.data.length;\\n    data[selectedRow] = [\\n      { label: \\\"Name\\\", value: \\\"Enter data below\\\", type: \\\"textinput\\\" },\\n      { label: \\\"Address\\\", value: \\\"\\\", type: \\\"textinput\\\" },\\n      { label: \\\"City\\\", value: \\\"\\\", type: \\\"textinput\\\" },\\n      { label: \\\"State\\\", value: [\\\"\\\"], type: \\\"dropdown\\\" },\\n      { label: \\\"ZipCode\\\", value: \\\"\\\", type: \\\"textinput\\\" },\\n      { label: \\\"Country\\\", value: [\\\"\\\"], type: \\\"dropdown\\\" }\\n    ];\\n    this.setState({ data, selectedRow, adding: true });\\n  };\\n\\n  deleteRow = () => {\\n    let data = this.state.data.slice();\\n    if (data.length > 0) {\\n      data.splice(this.state.selectedRow, 1);\\n      this.setState({ data, selectedRow: 0 });\\n    }\\n  };\\n\\n  updateRow = newData => {\\n    let data = this.state.data.slice();\\n    let selectedRow = this.state.selectedRow;\\n    data[selectedRow] = [\\n      { label: \\\"Name\\\", value: newData.name, type: \\\"textinput\\\" },\\n      { label: \\\"Address\\\", value: newData.address, type: \\\"textinput\\\" },\\n      { label: \\\"City\\\", value: newData.city, type: \\\"textinput\\\" },\\n      { label: \\\"State\\\", value: [newData.state], type: \\\"dropdown\\\" },\\n      { label: \\\"ZipCode\\\", value: newData.zipCode, type: \\\"textinput\\\" },\\n      { label: \\\"Country\\\", value: [newData.country], type: \\\"dropdown\\\" }\\n    ];\\n    this.setState({ data });\\n  };\\n\\n  toggleAdding = () => {\\n    const adding = this.state.adding;\\n    this.setState({ adding: !adding });\\n  };\\n\\n  renderRow = (row, id) => {\\n    return (\\n      <StructuredListRow key={id} onClick={() => this.onRowClick(id)}>\\n        <div>\\n          <StructuredListInput\\n            id={`row-${id}`}\\n            value=\\\"row-0\\\"\\n            title=\\\"row-0\\\"\\n            name=\\\"row-0\\\"\\n            checked={this.state.selectedRow === id}\\n          />\\n          <StructuredListCell>\\n            <Icon\\n              className=\\\"bx--structured-list-svg\\\"\\n              icon={iconCheckmarkSolid}\\n            />\\n          </StructuredListCell>\\n        </div>\\n        {Object.keys(row).map(col => {\\n          return (\\n            <StructuredListCell key={col} className=\\\"simple-list-row\\\">\\n              {row[col]}\\n            </StructuredListCell>\\n          );\\n        })}\\n      </StructuredListRow>\\n    );\\n  };\\n\\n  render() {\\n    const selectedRow = this.state.selectedRow;\\n    const data = this.state.data;\\n    const columns = data.length\\n      ? data[selectedRow].map(item => item.label)\\n      : [];\\n\\n    return (\\n      <div className=\\\"bx--grid pattern-container\\\">\\n        <Header\\n          title=\\\"Create, Read, Update, Delete\\\"\\n          subtitle=\\\"This composite pattern is build from the Table List pattern and uses the Validating Form pattern for creating items, Update Form pattern for Update.\\\"\\n        />\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            <StructuredListWrapper selection border>\\n              <StructuredListHead>\\n                <StructuredListRow head>\\n                  <StructuredListCell head />\\n                  {columns.map(key => {\\n                    return (\\n                      <StructuredListCell head key={key}>\\n                        {key.charAt(0).toUpperCase() +\\n                          key.slice(1).replace(/([A-Z])/g, \\\" $1\\\")}\\n                      </StructuredListCell>\\n                    );\\n                  })}\\n                </StructuredListRow>\\n              </StructuredListHead>\\n              <StructuredListBody>\\n                {data.map((row, i) => {\\n                  const values = row.map(item => item.value);\\n                  return this.renderRow(values, i);\\n                })}\\n              </StructuredListBody>\\n            </StructuredListWrapper>\\n          </div>\\n        </div>\\n        <div className=\\\"bx--row left-align\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            <Button className=\\\"add-delete-row-buttons\\\" onClick={this.addRow}>\\n              Add Row\\n            </Button>\\n            <Button className=\\\"add-delete-row-buttons\\\" onClick={this.deleteRow}>\\n              Delete Row\\n            </Button>\\n          </div>\\n        </div>\\n        <br />\\n        <br />\\n        {data.length > 0 && (\\n          <div className=\\\"bx--row\\\">\\n            <div className=\\\"bx--col-xs-12\\\">\\n              <ValidatingForm\\n                data={data[selectedRow]}\\n                updateRow={this.updateRow}\\n                adding={this.state.adding}\\n                toggleAdding={this.toggleAdding}\\n              />\\n            </div>\\n          </div>\\n        )}\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default CreateReadUpdateDelete;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport { Search, DataTable } from \\\"carbon-components-react\\\";\\nimport Header from \\\"./Header\\\";\\nimport \\\"./patterns.scss\\\";\\n\\nconst {\\n  Table,\\n  TableBody,\\n  TableCell,\\n  TableContainer,\\n  TableHead,\\n  TableHeader,\\n  TableRow\\n} = DataTable;\\n\\nclass SearchList extends Component {\\n  constructor(props) {\\n    super(props);\\n    const rowsList = [\\n      {\\n        id: \\\"1\\\",\\n        name: \\\"Load Balancer 1\\\",\\n        port: \\\"25\\\",\\n        status: \\\"Disabled\\\"\\n      },\\n      {\\n        id: \\\"2\\\",\\n        name: \\\"Load Balancer 2\\\",\\n        port: \\\"80\\\",\\n        status: \\\"Starting\\\"\\n      },\\n      {\\n        id: \\\"3\\\",\\n        name: \\\"Load Balancer 3\\\",\\n        port: \\\"443\\\",\\n        status: \\\"Active\\\"\\n      }\\n    ];\\n    this.state = {\\n      searchKeyword: \\\"\\\",\\n      initialRowsList: rowsList,\\n      rowsList: rowsList,\\n      headers: [\\n        {\\n          key: \\\"name\\\",\\n          header: \\\"Name\\\"\\n        },\\n        {\\n          key: \\\"port\\\",\\n          header: \\\"Port\\\"\\n        },\\n        {\\n          key: \\\"status\\\",\\n          header: \\\"Status\\\"\\n        }\\n      ]\\n    };\\n  }\\n\\n  onSearch = event => {\\n    this.setState({ searchKeyword: event.target.value }, () => {\\n      const subset = this.state.initialRowsList.filter(datarow =>\\n        Object.keys(datarow).reduce((accumulator, field) => {\\n          return (\\n            accumulator ||\\n            datarow[field]\\n              .toLocaleLowerCase()\\n              .includes(this.state.searchKeyword.toLocaleLowerCase())\\n          );\\n        }, false)\\n      );\\n      this.setState({ rowsList: subset });\\n    });\\n  };\\n\\n  render() {\\n    return (\\n      <div className=\\\"bx--grid pattern-container\\\">\\n        <Header\\n          title=\\\"Search List\\\"\\n          subtitle=\\\"This pattern uses a Validating Form pattern linked to a Table List pattern for display of the items that have been searched for.\\\"\\n        />\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            <Search\\n              value={this.state.searchKeyword}\\n              labelText=\\\"Search\\\"\\n              closeButtonLabelText=\\\"\\\"\\n              placeHolderText=\\\"Search\\\"\\n              onChange={this.onSearch}\\n              id=\\\"search-1\\\"\\n              light={true}\\n            />\\n          </div>\\n        </div>\\n        <br />\\n        <br />\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            {this.state.rowsList.length !== 0 && (\\n              <DataTable\\n                rows={this.state.rowsList}\\n                headers={this.state.headers}\\n                render={({\\n                  rows,\\n                  headers,\\n                  getHeaderProps,\\n                  getRowProps,\\n                  getSelectionProps\\n                }) => {\\n                  return (\\n                    <TableContainer title=\\\"\\\">\\n                      <Table>\\n                        <TableHead>\\n                          <TableRow>\\n                            {headers.map(header => (\\n                              <TableHeader {...getHeaderProps({ header })}>\\n                                {header.header}\\n                              </TableHeader>\\n                            ))}\\n                          </TableRow>\\n                        </TableHead>\\n                        <TableBody>\\n                          {rows.map(row => (\\n                            <TableRow {...getRowProps({ row })}>\\n                              {row.cells.map(cell => (\\n                                <TableCell key={cell.id}>\\n                                  {cell.value}\\n                                </TableCell>\\n                              ))}\\n                            </TableRow>\\n                          ))}\\n                        </TableBody>\\n                      </Table>\\n                    </TableContainer>\\n                  );\\n                }}\\n              />\\n            )}\\n            {this.state.rowsList.length === 0 && (\\n              <p className=\\\"center-align\\\">No matching result</p>\\n            )}\\n          </div>\\n        </div>\\n        <br />\\n        <br />\\n      </div>\\n    );\\n  }\\n}\\nexport default SearchList;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport { Search } from \\\"carbon-components-react\\\";\\nimport \\\"./patterns.scss\\\";\\nimport Header from \\\"./Header\\\";\\nimport DisplayForm from \\\"./DisplayForm\\\";\\n\\nclass SearchForm extends Component {\\n  constructor(props) {\\n    super(props);\\n    const defaultData = [\\n      {\\n        Name: \\\"Lin\\\",\\n        Address: \\\"123 Main Street\\\",\\n        City: \\\"Austin\\\",\\n        State: \\\"TX\\\",\\n        ZipCode: \\\"12345\\\",\\n        Country: \\\"USA\\\"\\n      },\\n      {\\n        Name: \\\"Mak\\\",\\n        Address: \\\"45 2nd Street\\\",\\n        City: \\\"Austin\\\",\\n        State: \\\"TX\\\",\\n        ZipCode: \\\"78766\\\",\\n        Country: \\\"USA\\\"\\n      },\\n      {\\n        Name: \\\"Joe\\\",\\n        Address: \\\"40 Down Street\\\",\\n        City: \\\"San Francisco\\\",\\n        State: \\\"CA\\\",\\n        ZipCode: \\\"90706\\\",\\n        Country: \\\"USA\\\"\\n      }\\n    ];\\n    this.state = {\\n      searchKeyword: \\\"\\\",\\n      data: defaultData\\n    };\\n  }\\n\\n  formatDataForDisplayForm = datarow => {\\n    const displayData = Object.keys(datarow).map(label => {\\n      return { label, value: datarow[label], type: \\\"textinput\\\" };\\n    });\\n    return displayData;\\n  };\\n\\n  onSearch = event => {\\n    this.setState({ searchKeyword: event.target.value });\\n  };\\n\\n  getFilteredData = data => {\\n    const subset = data.filter(datarow =>\\n      Object.keys(datarow).reduce((accumulator, field) => {\\n        return (\\n          accumulator ||\\n          datarow[field]\\n            .toLocaleLowerCase()\\n            .includes(this.state.searchKeyword.toLocaleLowerCase())\\n        );\\n      }, false)\\n    );\\n    return subset;\\n  };\\n\\n  render() {\\n    const data = this.state.data;\\n    const filteredData = this.getFilteredData(data);\\n\\n    return (\\n      <div className=\\\"bx--grid pattern-container\\\">\\n        <Header\\n          title=\\\"Search Form\\\"\\n          subtitle=\\\"This pattern uses a Validating Form pattern and is linked to a Display Form pattern for a single item display.\\\"\\n        />\\n        <div className=\\\"bx--row\\\">\\n          <div className=\\\"bx--col-xs-12\\\">\\n            <Search\\n              value={this.state.searchKeyword}\\n              labelText=\\\"Search\\\"\\n              closeButtonLabelText=\\\"\\\"\\n              placeHolderText=\\\"Search\\\"\\n              onChange={this.onSearch}\\n              id=\\\"search-1\\\"\\n              light={true}\\n            />\\n          </div>\\n        </div>\\n        <br />\\n        {this.state.searchKeyword !== \\\"\\\" && (\\n          <div className=\\\"bx--row\\\">\\n            <div className=\\\"bx--col-xs-12\\\">\\n              {filteredData.length > 0 ? (\\n                <DisplayForm\\n                  data={this.formatDataForDisplayForm(filteredData[0])}\\n                />\\n              ) : (\\n                <p className=\\\"center-align\\\">No matching result</p>\\n              )}\\n            </div>\\n          </div>\\n        )}\\n      </div>\\n    );\\n  }\\n}\\nexport default SearchForm;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport DisplayForm from \\\"../pattern-components/DisplayForm\\\";\\nimport ValidatingForm from \\\"../pattern-components/ValidatingForm\\\";\\nimport UpdateForm from \\\"../pattern-components/UpdateForm\\\";\\nimport ValidatingFormWizard1 from \\\"../pattern-components/ValidatingFormWizard1\\\";\\nimport ValidatingFormWizard2 from \\\"../pattern-components/ValidatingFormWizard2\\\";\\nimport SimpleList from \\\"../pattern-components/SimpleList\\\";\\nimport TableList from \\\"../pattern-components/TableList\\\";\\nimport ListToList from \\\"../pattern-components/ListToList\\\";\\nimport LinkedList from \\\"../pattern-components/LinkedList\\\";\\nimport MasterDetail from \\\"../pattern-components/MasterDetail\\\";\\nimport CreateReadUpdateDelete from \\\"../pattern-components/CreateReadUpdateDelete\\\";\\nimport SearchList from \\\"../pattern-components/SearchList\\\";\\nimport SearchForm from \\\"../pattern-components/SearchForm\\\";\\nimport \\\"../pattern-components/patterns.scss\\\";\\n\\nclass UIShellBody extends Component {\\n  components = {\\n    \\\"Display Form\\\": DisplayForm,\\n    \\\"Validating Form\\\": ValidatingForm,\\n    \\\"Update Form\\\": UpdateForm,\\n    \\\"Validating Form Wizard 1\\\": ValidatingFormWizard1,\\n    \\\"Validating Form Wizard 2\\\": ValidatingFormWizard2,\\n    \\\"Simple List\\\": SimpleList,\\n    \\\"Table List\\\": TableList,\\n    \\\"List to List\\\": ListToList,\\n    \\\"Linked List\\\": LinkedList,\\n    \\\"Master Detail\\\": MasterDetail,\\n    \\\"Create, Read, Update, Delete\\\": CreateReadUpdateDelete,\\n    \\\"Search List\\\": SearchList,\\n    \\\"Search Form\\\": SearchForm\\n  };\\n  defaultComponent = \\\"Display Form\\\";\\n\\n  render() {\\n    const PatternName = this.components[\\n      this.props.patternName || this.defaultComponent\\n    ];\\n    return (\\n      <div className=\\\"pattern-container\\\">\\n        <PatternName showDescription={true} />\\n      </div>\\n    );\\n  }\\n}\\nexport default UIShellBody;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport {\\n  Content,\\n  Header,\\n  HeaderName,\\n  SkipToContent,\\n  SideNav,\\n  SideNavItems,\\n  SideNavMenu,\\n  SideNavMenuItem,\\n} from 'carbon-components-react/lib/components/UIShell/';\\nimport UIShellBody from \\\"./UIShellBody\\\";\\n\\nconst Fade20 = () => (\\n  <svg icon width=\\\"20\\\" height=\\\"20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\">\\n    <path d=\\\"M8.24 25.14L7 26.67a14 14 0 0 0 4.18 2.44l.68-1.88a12\\n        12 0 0 1-3.62-2.09zm-4.05-7.07l-2 .35A13.89 13.89 0 0 0 3.86\\n        23l1.73-1a11.9 11.9 0 0 1-1.4-3.93zm7.63-13.31l-.68-1.88A14\\n        14 0 0 0 7 5.33l1.24 1.53a12 12 0 0 1 3.58-2.1zM5.59\\n        10L3.86 9a13.89 13.89 0 0 0-1.64 4.54l2 .35A11.9 11.9 0 0 1 5.59\\n        10zM16 2v2a12 12 0 0 1 0 24v2a14 14 0 0 0 0-28z\\\" />\\n  </svg>\\n);\\n\\nclass UIShell extends Component {\\n  header = \\\"Garage for Cloud Catalyst\\\";\\n  menuTitle = \\\"12 Design Pattern\\\";\\n  menuItems = [\\n    \\\"Display Form\\\",\\n    \\\"Validating Form\\\",\\n    \\\"Update Form\\\",\\n    \\\"Validating Form Wizard 1\\\",\\n    \\\"Validating Form Wizard 2\\\",\\n    \\\"Simple List\\\",\\n    \\\"Table List\\\",\\n    \\\"List to List\\\",\\n    \\\"Linked List\\\",\\n    \\\"Master Detail\\\",\\n    \\\"Create, Read, Update, Delete\\\",\\n    \\\"Search List\\\",\\n    \\\"Search Form\\\"\\n  ];\\n\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      patternName: this.menuItems[0]\\n    };\\n  }\\n\\n  onPatternSelection = label => {\\n    this.setState({ patternName: label });\\n  };\\n\\n  renderSideNavItems = () => {\\n    return this.menuItems.map(label => this.renderSideNavItem(label));\\n  };\\n\\n  renderSideNavItem = label => {\\n    return (\\n      <SideNavMenuItem href=\\\"# \\\" isActive={label === this.state.patternName ? true : false} onClick={e => this.onPatternSelection(label)}>{label}</SideNavMenuItem>\\n    );\\n  };\\n\\n  render() {\\n    return (\\n      <div>\\n        <Header aria-label=\\\"IBM Platform Name\\\">\\n          <SkipToContent />\\n          <HeaderName href=\\\"#\\\" prefix=\\\"IBM\\\">\\n            {this.header}\\n          </HeaderName>\\n        </Header>\\n        <SideNav aria-label=\\\"Side navigation\\\">\\n          <SideNavItems>\\n            <SideNavMenu\\n              defaultExpanded\\n              icon={<Fade20 />}\\n              title={this.menuTitle}\\n            >\\n              {this.renderSideNavItems()}\\n            </SideNavMenu>\\n          </SideNavItems>\\n        </SideNav>\\n        <Content id=\\\"main-content\\\"><UIShellBody patternName={this.state.patternName} /></Content>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default UIShell;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport UIShell from \\\"./components/UIShell\\\";\\nimport \\\"./App.scss\\\";\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <UIShell />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport \\\"./index.css\\\";\\nimport App from \\\"./App\\\";\\nimport * as serviceWorker from \\\"./serviceWorker\\\";\\n\\nReactDOM.render(<App />, document.getElementById(\\\"root\\\"));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(e,t,a){},47:function(e,t,a){e.exports=a(86)},52:function(e,t,a){},84:function(e,t,a){},86:function(e,t,a){\"use strict\";a.r(t);var n=a(0),l=a.n(n),r=a(23),s=a.n(r),i=(a(52),a(5)),c=a(6),o=a(8),d=a(7),m=a(9),u=a(15),b=a(99),v=a(92),p=a(93),h=a(98),E=(a(12),function(e){function t(){return Object(i.a)(this,t),Object(o.a)(this,Object(d.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this.props,t=e.title,a=e.subtitle;return l.a.createElement(\"div\",{className:\"bx--row pattern-description\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(\"h1\",{className:\"pattern-title\"},t),l.a.createElement(\"div\",{\"data-notification\":!0,className:\"bx--inline-notification bx--inline-notification--info\",role:\"alert\"},l.a.createElement(\"div\",{className:\"bx--inline-notification__details\"},l.a.createElement(\"svg\",{className:\"bx--inline-notification__icon\",width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",xmlns:\"http://www.w3.org/2000/svg\"},l.a.createElement(\"path\",{d:\"M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm1-3V7H7v6h2zM8 5a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"})),l.a.createElement(\"div\",{className:\"bx--inline-notification__text-wrapper\"},l.a.createElement(\"p\",{className:\"bx--inline-notification__title\"},\"\"),l.a.createElement(\"p\",{className:\"bx--inline-notification__subtitle\"},a))))))}}]),t}(n.Component)),y=function(e){function t(e){var a;Object(i.a)(this,t);return(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).state={data:e.data||[{label:\"Name\",value:\"John Doe\",type:\"textinput\"},{label:\"Address\",value:\"123 Main Street\",type:\"textinput\"},{label:\"City\",value:\"Anytown\",type:\"textinput\"},{label:\"State\",value:[\"TX\"],type:\"dropdown\"},{label:\"ZipCode\",value:\"12345\",type:\"textinput\"},{label:\"Country\",value:[\"United States\"],type:\"dropdown\"}],showDescription:e.showDescription||!1},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"componentWillReceiveProps\",value:function(e){e.data&&this.setState({data:e.data})}},{key:\"render\",value:function(){var e=this.state.data,t=this.state.showDescription;return l.a.createElement(\"div\",{className:\"bx--grid\"},t&&l.a.createElement(E,{title:\"Display Form\",subtitle:\"Displays a model object as a form in a read only display.\"}),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(b.a,null,l.a.createElement(v.a,null,e.map(function(e){return\"textinput\"===e.type?l.a.createElement(\"div\",{key:e.label,className:\"display-form-item\"},l.a.createElement(p.a,{disabled:!0,id:e.label,value:e.value,labelText:e.label.charAt(0).toUpperCase()+e.label.slice(1).replace(/([A-Z])/g,\" $1\")})):\"dropdown\"===e.type?l.a.createElement(\"div\",{key:e.label,className:\"display-form-item\"},l.a.createElement(\"p\",{className:\"bx--label left-align\"},e.label),l.a.createElement(h.a,{disabled:!0,id:e.label,label:\"Select a \"+e.label.toLowerCase()+\"..\",items:e.value,selectedItem:e.value[0]})):l.a.createElement(\"div\",null)}))))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))}}]),t}(n.Component),f=a(40),S=a(11),N=a(100),w=!0,C=function(e){function t(e){var a;if(Object(i.a)(this,t),(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).convertData=function(e){var t={};return e.forEach(function(e){t[e.label]=e.value}),t},a.saveData=function(e){var t,n,l=e.target,r=l.name,s=l.value;s?a.setState((t={},Object(S.a)(t,r,s),Object(S.a)(t,r+\"Invalid\",!1),t)):a.setState((n={},Object(S.a)(n,r,s),Object(S.a)(n,r+\"Invalid\",!0),n))},a.saveDataDropdown1=function(e){var t=e.selectedItem;a.setState({state:t,stateInvalid:!1})},a.saveDataDropdown2=function(e){var t=e.selectedItem;a.setState({country:t,countryInvalid:!1})},a.checkForm=function(){return w=!0,a.state.name||(a.setState({nameInvalid:!0}),w=!1),a.state.address||(a.setState({addressInvalid:!0}),w=!1),a.state.city||(a.setState({cityInvalid:!0}),w=!1),a.state.state||(a.setState({stateInvalid:!0}),w=!1),a.state.zipCode&&(\"United States\"!==a.state.country||/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(a.state.zipCode))||(a.setState({zipCodeInvalid:!0}),w=!1),a.state.country||(a.setState({countryInvalid:!0}),w=!1),w},a.saveForm=function(e){if(e.preventDefault(),a.checkForm()){var t={name:a.state.name,address:a.state.address,city:a.state.city,state:a.state.state,zipCode:a.state.zipCode,country:a.state.country};\"function\"===typeof a.props.updateRow?a.props.updateRow(t):a.setState({dataToSave:t}),a.props.adding&&a.props.toggleAdding()}},a.state={dataToSave:{},showDescription:e.showDescription||!1},a.props.data){var n=a.convertData(a.props.data);a.state=Object(f.a)({},a.state,{name:n.Name,address:n.Address,city:n.City,state:n.State[0],zipCode:n.ZipCode,country:n.Country[0]})}return a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"componentWillReceiveProps\",value:function(e){if(e.data){var t=this.convertData(e.data);\"Enter data below\"===t.Name&&(t.Name=\"\"),this.setState({name:t.Name,address:t.Address,city:t.City,state:t.State[0],zipCode:t.ZipCode,country:t.Country[0]})}}},{key:\"render\",value:function(){var e=this,t=this.state.showDescription;return l.a.createElement(\"div\",{className:\"bx--grid pattern-container\"},t&&l.a.createElement(E,{title:\"Validating Form\",subtitle:\"Presents a model object as a data input form and interacts with a validation service for validation.\"}),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(b.a,null,l.a.createElement(v.a,null,l.a.createElement(p.a,{id:\"name\",name:\"name\",value:this.state.name||\"\",onChange:this.saveData,labelText:\"Name\",maxLength:\"100\",invalid:this.state.nameInvalid,invalidText:\"Please enter a name..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"address\",name:\"address\",value:this.state.address||\"\",onChange:this.saveData,labelText:\"Address\",maxLength:\"200\",invalid:this.state.addressInvalid,invalidText:\"Please enter an address..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"city\",name:\"city\",value:this.state.city||\"\",onChange:this.saveData,labelText:\"City\",maxLength:\"100\",invalid:this.state.cityInvalid,invalidText:\"Please enter a city..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"p\",{className:\"bx--label left-align\"},\"State\"),l.a.createElement(h.a,{id:\"state\",label:\"Select a state..\",ariaLabel:\"Select a state..\",items:[\"AL\",\"AK\",\"AS\",\"AZ\",\"AR\",\"CA\",\"CO\",\"CT\",\"DE\",\"DC\",\"FM\",\"FL\",\"GA\",\"GU\",\"HI\",\"ID\",\"IL\",\"IN\",\"IA\",\"KS\",\"KY\",\"LA\",\"ME\",\"MH\",\"MD\",\"MA\",\"MI\",\"MN\",\"MS\",\"MO\",\"MT\",\"NE\",\"NV\",\"NH\",\"NJ\",\"NM\",\"NY\",\"NC\",\"ND\",\"MP\",\"OH\",\"OK\",\"OR\",\"PW\",\"PA\",\"PR\",\"RI\",\"SC\",\"SD\",\"TN\",\"TX\",\"UT\",\"VT\",\"VI\",\"VA\",\"WA\",\"WV\",\"WI\",\"WY\",\"Other\"],selectedItem:this.state.state,onChange:this.saveDataDropdown1}),this.state.stateInvalid&&l.a.createElement(\"p\",{className:\"dropdown-invalid\"},\"Please select a state..\"),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"zipCode\",name:\"zipCode\",value:this.state.zipCode||\"\",onChange:this.saveData,labelText:\"Zip Code\",maxLength:\"20\",invalid:this.state.zipCodeInvalid,invalidText:\"Please enter a valid zip code..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"p\",{className:\"bx--label left-align\"},\"Country\"),l.a.createElement(h.a,{id:\"country\",label:\"Select a country..\",ariaLabel:\"Select a country..\",items:[\"United States\",\"Other\"],selectedItem:this.state.country,onChange:this.saveDataDropdown2}),this.state.countryInvalid&&l.a.createElement(\"p\",{className:\"dropdown-invalid\"},\"Please select a country..\"),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"div\",{className:\"left-align\"},t&&l.a.createElement(N.a,{onClick:this.saveForm},\"Submit\"),!t&&l.a.createElement(N.a,{onClick:this.saveForm},this.props.adding?\"Add\":\"Update\")))))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),Object.keys(this.state.dataToSave).length>0&&l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12 left-align\"},l.a.createElement(b.a,null,Object.keys(this.state.dataToSave).map(function(t){return l.a.createElement(\"p\",null,\"\\xa0\\xa0\",l.a.createElement(\"strong\",null,t.charAt(0).toUpperCase()+t.slice(1).replace(/([A-Z])/g,\" $1\"),\":\"),\" \",e.state.dataToSave[t])})),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))))}}]),t}(n.Component),x=!0,g=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).saveData=function(e){var t,n,l=e.target,r=l.name,s=l.value;s?a.setState((t={},Object(S.a)(t,r,s),Object(S.a)(t,r+\"Invalid\",!1),t)):a.setState((n={},Object(S.a)(n,r,s),Object(S.a)(n,r+\"Invalid\",!0),n))},a.saveDataDropdown1=function(e){var t=e.selectedItem;a.setState({state:t,stateInvalid:!1})},a.saveDataDropdown2=function(e){var t=e.selectedItem;a.setState({country:t,countryInvalid:!1})},a.checkForm=function(){return x=!0,a.state.name||(a.setState({nameInvalid:!0}),x=!1),a.state.address||(a.setState({addressInvalid:!0}),x=!1),a.state.city||(a.setState({cityInvalid:!0}),x=!1),a.state.state||(a.setState({stateInvalid:!0}),x=!1),a.state.zipCode&&(\"United States\"!==a.state.country||/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(a.state.zipCode))||(a.setState({zipCodeInvalid:!0}),x=!1),a.state.country||(a.setState({countryInvalid:!0}),x=!1),x},a.saveForm=function(e){if(e.preventDefault(),a.checkForm()){var t={name:a.state.name,address:a.state.address,city:a.state.city,state:a.state.state,zipCode:a.state.zipCode,country:a.state.country};a.setState({dataToSave:t})}},a.state={dataToSave:{},name:\"John Doe\",address:\"123 Main Street\",city:\"Anytown\",state:\"TX\",zipCode:\"12345\",country:\"United States\"},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"componentDidMount\",value:function(){var e={name:this.state.name,address:this.state.address,city:this.state.city,state:this.state.state,zipCode:this.state.zipCode,country:this.state.country};this.setState({dataToSave:e})}},{key:\"render\",value:function(){var e=this;return l.a.createElement(\"div\",{className:\"bx--grid pattern-container\"},l.a.createElement(E,{title:\"Update Form\",subtitle:\"Update form is based on the Display Form pattern but will display model data and then validate ready for it to be updated.\"}),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(b.a,null,l.a.createElement(v.a,null,l.a.createElement(p.a,{id:\"name\",name:\"name\",value:this.state.name||\"\",onChange:this.saveData,labelText:\"Name\",maxLength:\"100\",invalid:this.state.nameInvalid,invalidText:\"Please enter a name..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"address\",name:\"address\",value:this.state.address||\"\",onChange:this.saveData,labelText:\"Address\",maxLength:\"200\",invalid:this.state.addressInvalid,invalidText:\"Please enter an address..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"city\",name:\"city\",value:this.state.city||\"\",onChange:this.saveData,labelText:\"City\",maxLength:\"100\",invalid:this.state.cityInvalid,invalidText:\"Please enter a city..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"p\",{className:\"bx--label left-align\"},\"State\"),l.a.createElement(h.a,{id:\"state\",label:\"Select a state..\",ariaLabel:\"Select a state..\",items:[\"AL\",\"AK\",\"AS\",\"AZ\",\"AR\",\"CA\",\"CO\",\"CT\",\"DE\",\"DC\",\"FM\",\"FL\",\"GA\",\"GU\",\"HI\",\"ID\",\"IL\",\"IN\",\"IA\",\"KS\",\"KY\",\"LA\",\"ME\",\"MH\",\"MD\",\"MA\",\"MI\",\"MN\",\"MS\",\"MO\",\"MT\",\"NE\",\"NV\",\"NH\",\"NJ\",\"NM\",\"NY\",\"NC\",\"ND\",\"MP\",\"OH\",\"OK\",\"OR\",\"PW\",\"PA\",\"PR\",\"RI\",\"SC\",\"SD\",\"TN\",\"TX\",\"UT\",\"VT\",\"VI\",\"VA\",\"WA\",\"WV\",\"WI\",\"WY\",\"Other\"],selectedItem:this.state.state,onChange:this.saveDataDropdown1}),this.state.stateInvalid&&l.a.createElement(\"p\",{className:\"dropdown-invalid\"},\"Please select a state..\"),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"zipCode\",name:\"zipCode\",value:this.state.zipCode||\"\",onChange:this.saveData,labelText:\"Zip Code\",maxLength:\"20\",invalid:this.state.zipCodeInvalid,invalidText:\"Please enter a valid zip code..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"p\",{className:\"bx--label left-align\"},\"Country\"),l.a.createElement(h.a,{id:\"country\",label:\"Select a country..\",ariaLabel:\"Select a country..\",items:[\"United States\",\"Other\"],selectedItem:this.state.country,onChange:this.saveDataDropdown2}),this.state.countryInvalid&&l.a.createElement(\"p\",{className:\"dropdown-invalid\"},\"Please select a country..\"),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"div\",{className:\"left-align\"},l.a.createElement(N.a,{onClick:this.saveForm},\"Update\")))))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),Object.keys(this.state.dataToSave).length>0&&l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12 left-align\"},l.a.createElement(b.a,null,Object.keys(this.state.dataToSave).map(function(t){return l.a.createElement(\"p\",{key:t},\"\\xa0\\xa0\",l.a.createElement(\"strong\",null,t.charAt(0).toUpperCase()+t.slice(1).replace(/([A-Z])/g,\" $1\"),\":\"),\" \",e.state.dataToSave[t])})),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))))}}]),t}(n.Component),T=a(101),O=a(94),A=!0,I=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).onSelectionChange=function(e){a.setState({selectedTab:e})},a.nextTab=function(){a.checkFormTab1()&&a.setState(function(e){return{selectedTab:e.selectedTab+1}})},a.saveData=function(e){var t,n,l=e.target,r=l.name,s=l.value;s?a.setState((t={},Object(S.a)(t,r,s),Object(S.a)(t,r+\"Invalid\",!1),t)):a.setState((n={},Object(S.a)(n,r,s),Object(S.a)(n,r+\"Invalid\",!0),n))},a.saveDataDropdown1=function(e){var t=e.selectedItem;a.setState({state:t,stateInvalid:!1})},a.saveDataDropdown2=function(e){var t=e.selectedItem;a.setState({country:t,countryInvalid:!1})},a.checkFormTab1=function(){return A=!0,a.state.firstName||(a.setState({firstNameInvalid:!0}),A=!1),a.state.lastName||(a.setState({lastNameInvalid:!0}),A=!1),A},a.checkForm=function(){return A=!0,a.state.firstName||(a.setState({firstNameInvalid:!0}),A=!1),a.state.lastName||(a.setState({lastNameInvalid:!0}),A=!1),a.state.streetAddress||(a.setState({streetAddressInvalid:!0}),A=!1),a.state.city||(a.setState({cityInvalid:!0}),A=!1),a.state.state||(a.setState({stateInvalid:!0}),A=!1),a.state.zipCode&&(\"United States\"!==a.state.country||/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(a.state.zipCode))||(a.setState({zipCodeInvalid:!0}),A=!1),a.state.country||(a.setState({countryInvalid:!0}),A=!1),A},a.saveForm=function(e){if(e.preventDefault(),a.checkForm()){var t={firstName:a.state.firstName,middleName:a.state.middleName,lastName:a.state.lastName,streetAddress:a.state.streetAddress,city:a.state.city,state:a.state.state,zipCode:a.state.zipCode,country:a.state.country};a.setState({dataToSave:t})}},a.state={dataToSave:{},selectedTab:0},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this;return l.a.createElement(\"div\",{className:\"bx--grid pattern-container\"},l.a.createElement(E,{title:\"Validating Form Wizard 1\",subtitle:\"The Validating Form Wizard is based on the Validating Form pattern but displays a large form in the style of Paged Wizard, Tabbed Page or Individual Pages. This will depend on the channel device characteristics.\"}),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(b.a,null,l.a.createElement(v.a,null,l.a.createElement(T.a,{selected:this.state.selectedTab,onSelectionChange:this.onSelectionChange},l.a.createElement(O.a,{label:\"Name\"},l.a.createElement(\"div\",null,l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"firstName\",name:\"firstName\",value:this.state.firstName||\"\",onChange:this.saveData,labelText:\"First Name\",maxLength:\"100\",invalid:this.state.firstNameInvalid,invalidText:\"Please enter a first name..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"middleName\",name:\"middleName\",value:this.state.middleName||\"\",onChange:this.saveData,labelText:\"Middle Name\",maxLength:\"100\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"lastName\",name:\"lastName\",value:this.state.lastName||\"\",onChange:this.saveData,labelText:\"Last Name\",maxLength:\"100\",invalid:this.state.lastNameInvalid,invalidText:\"Please enter a last name..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"div\",{className:\"left-align\"},l.a.createElement(N.a,{onClick:this.nextTab},\"Next\")))),l.a.createElement(O.a,{label:\"Address\"},l.a.createElement(\"div\",null,l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"streetAddress\",name:\"streetAddress\",value:this.state.streetAddress||\"\",onChange:this.saveData,labelText:\"Street Address\",maxLength:\"200\",invalid:this.state.streetAddressInvalid,invalidText:\"Please enter an address..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"city\",name:\"city\",value:this.state.city||\"\",onChange:this.saveData,labelText:\"City\",maxLength:\"100\",invalid:this.state.cityInvalid,invalidText:\"Please enter a city..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"p\",{className:\"bx--label left-align\"},\"State\"),l.a.createElement(h.a,{id:\"state\",label:\"Select a state..\",ariaLabel:\"Select a state..\",items:[\"AL\",\"AK\",\"AS\",\"AZ\",\"AR\",\"CA\",\"CO\",\"CT\",\"DE\",\"DC\",\"FM\",\"FL\",\"GA\",\"GU\",\"HI\",\"ID\",\"IL\",\"IN\",\"IA\",\"KS\",\"KY\",\"LA\",\"ME\",\"MH\",\"MD\",\"MA\",\"MI\",\"MN\",\"MS\",\"MO\",\"MT\",\"NE\",\"NV\",\"NH\",\"NJ\",\"NM\",\"NY\",\"NC\",\"ND\",\"MP\",\"OH\",\"OK\",\"OR\",\"PW\",\"PA\",\"PR\",\"RI\",\"SC\",\"SD\",\"TN\",\"TX\",\"UT\",\"VT\",\"VI\",\"VA\",\"WA\",\"WV\",\"WI\",\"WY\",\"Other\"],selectedItem:this.state.state,onChange:this.saveDataDropdown1}),this.state.stateInvalid&&l.a.createElement(\"p\",{className:\"dropdown-invalid\"},\"Please select a state..\"),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"zipCode\",name:\"zipCode\",value:this.state.zipCode||\"\",onChange:this.saveData,labelText:\"Zip Code\",maxLength:\"20\",invalid:this.state.zipCodeInvalid,invalidText:\"Please enter a valid zip code..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"p\",{className:\"bx--label left-align\"},\"Country\"),l.a.createElement(h.a,{id:\"country\",label:\"Select a country..\",ariaLabel:\"Select a country..\",items:[\"United States\",\"Other\"],selectedItem:this.state.country,onChange:this.saveDataDropdown2}),this.state.countryInvalid&&l.a.createElement(\"p\",{className:\"dropdown-invalid\"},\"Please select a country..\"),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"div\",{className:\"left-align\"},l.a.createElement(N.a,{onClick:this.saveForm},\"Submit\"))))))))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),Object.keys(this.state.dataToSave).length>0&&l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12 left-align\"},l.a.createElement(b.a,null,Object.keys(this.state.dataToSave).map(function(t){return l.a.createElement(\"p\",null,\"\\xa0\\xa0\",l.a.createElement(\"strong\",null,t.charAt(0).toUpperCase()+t.slice(1).replace(/([A-Z])/g,\" $1\"),\":\"),\" \",e.state.dataToSave[t])})),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))))}}]),t}(n.Component),D=!0,L=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).prevTab=function(){a.setState(function(e){return{selectedTab:e.selectedTab-1}})},a.nextTab=function(){a.checkFormTab1()&&a.setState(function(e){return{selectedTab:e.selectedTab+1}})},a.saveData=function(e){var t,n,l=e.target,r=l.name,s=l.value;s?a.setState((t={},Object(S.a)(t,r,s),Object(S.a)(t,r+\"Invalid\",!1),t)):a.setState((n={},Object(S.a)(n,r,s),Object(S.a)(n,r+\"Invalid\",!0),n))},a.saveDataDropdown1=function(e){var t=e.selectedItem;a.setState({state:t,stateInvalid:!1})},a.saveDataDropdown2=function(e){var t=e.selectedItem;a.setState({country:t,countryInvalid:!1})},a.checkFormTab1=function(){return D=!0,a.state.firstName||(a.setState({firstNameInvalid:!0}),D=!1),a.state.lastName||(a.setState({lastNameInvalid:!0}),D=!1),D},a.checkForm=function(){return D=!0,a.state.firstName||(a.setState({firstNameInvalid:!0}),D=!1),a.state.lastName||(a.setState({lastNameInvalid:!0}),D=!1),a.state.streetAddress||(a.setState({streetAddressInvalid:!0}),D=!1),a.state.city||(a.setState({cityInvalid:!0}),D=!1),a.state.state||(a.setState({stateInvalid:!0}),D=!1),a.state.zipCode&&(\"United States\"!==a.state.country||/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(a.state.zipCode))||(a.setState({zipCodeInvalid:!0}),D=!1),a.state.country||(a.setState({countryInvalid:!0}),D=!1),D},a.saveForm=function(e){if(e.preventDefault(),a.checkForm()){var t={firstName:a.state.firstName,middleName:a.state.middleName,lastName:a.state.lastName,streetAddress:a.state.streetAddress,city:a.state.city,state:a.state.state,zipCode:a.state.zipCode,country:a.state.country};a.setState({dataToSave:t})}},a.state={dataToSave:{},selectedTab:0},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this;return l.a.createElement(\"div\",{className:\"bx--grid pattern-container\"},l.a.createElement(E,{title:\"Validating Form Wizard 2\",subtitle:\"The Validating Form Wizard is based on the Validating Form pattern but displays a large form in the style of Paged Wizard, Tabbed Page or Individual Pages. This will depend on the channel device characteristics.\"}),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(b.a,null,l.a.createElement(v.a,null,0===this.state.selectedTab&&l.a.createElement(\"div\",null,l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"firstName\",name:\"firstName\",value:this.state.firstName||\"\",onChange:this.saveData,labelText:\"First Name\",maxLength:\"100\",invalid:this.state.firstNameInvalid,invalidText:\"Please enter a first name..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"middleName\",name:\"middleName\",value:this.state.middleName||\"\",onChange:this.saveData,labelText:\"Middle Name\",maxLength:\"100\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"lastName\",name:\"lastName\",value:this.state.lastName||\"\",onChange:this.saveData,labelText:\"Last Name\",maxLength:\"100\",invalid:this.state.lastNameInvalid,invalidText:\"Please enter a last name..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"div\",{className:\"left-align\"},\"Page 1 of 2\",l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(N.a,{onClick:this.nextTab},\"Next\"))),1===this.state.selectedTab&&l.a.createElement(\"div\",null,l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"streetAddress\",name:\"streetAddress\",value:this.state.streetAddress||\"\",onChange:this.saveData,labelText:\"Street Address\",maxLength:\"200\",invalid:this.state.streetAddressInvalid,invalidText:\"Please enter an address..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"city\",name:\"city\",value:this.state.city||\"\",onChange:this.saveData,labelText:\"City\",maxLength:\"100\",invalid:this.state.cityInvalid,invalidText:\"Please enter a city..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"p\",{className:\"bx--label left-align\"},\"State\"),l.a.createElement(h.a,{id:\"state\",label:\"Select a state..\",ariaLabel:\"Select a state..\",items:[\"AL\",\"AK\",\"AS\",\"AZ\",\"AR\",\"CA\",\"CO\",\"CT\",\"DE\",\"DC\",\"FM\",\"FL\",\"GA\",\"GU\",\"HI\",\"ID\",\"IL\",\"IN\",\"IA\",\"KS\",\"KY\",\"LA\",\"ME\",\"MH\",\"MD\",\"MA\",\"MI\",\"MN\",\"MS\",\"MO\",\"MT\",\"NE\",\"NV\",\"NH\",\"NJ\",\"NM\",\"NY\",\"NC\",\"ND\",\"MP\",\"OH\",\"OK\",\"OR\",\"PW\",\"PA\",\"PR\",\"RI\",\"SC\",\"SD\",\"TN\",\"TX\",\"UT\",\"VT\",\"VI\",\"VA\",\"WA\",\"WV\",\"WI\",\"WY\",\"Other\"],selectedItem:this.state.state,onChange:this.saveDataDropdown1}),this.state.stateInvalid&&l.a.createElement(\"p\",{className:\"dropdown-invalid\"},\"Please select a state..\"),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(p.a,{id:\"zipCode\",name:\"zipCode\",value:this.state.zipCode||\"\",onChange:this.saveData,labelText:\"Zip Code\",maxLength:\"20\",invalid:this.state.zipCodeInvalid,invalidText:\"Please enter a valid zip code..\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"p\",{className:\"bx--label left-align\"},\"Country\"),l.a.createElement(h.a,{id:\"country\",label:\"Select a country..\",ariaLabel:\"Select a country..\",items:[\"United States\",\"Other\"],selectedItem:this.state.country,onChange:this.saveDataDropdown2}),this.state.countryInvalid&&l.a.createElement(\"p\",{className:\"dropdown-invalid\"},\"Please select a country..\"),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"div\",{className:\"left-align\"},\"Page 2 of 2\",l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(N.a,{onClick:this.prevTab},\"Previous\"),\"\\xa0\\xa0\\xa0\\xa0\",l.a.createElement(N.a,{onClick:this.saveForm},\"Submit\"))))))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),Object.keys(this.state.dataToSave).length>0&&l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12 left-align\"},l.a.createElement(b.a,null,Object.keys(this.state.dataToSave).map(function(t){return l.a.createElement(\"p\",null,\"\\xa0\\xa0\",l.a.createElement(\"strong\",null,t.charAt(0).toUpperCase()+t.slice(1).replace(/([A-Z])/g,\" $1\"),\":\"),\" \",e.state.dataToSave[t])})),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))))}}]),t}(n.Component),j=a(95),k=a(91),R=a(10),F=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).onRowClick=function(e){a.setState({selectedRow:e})},a.renderRow=function(e,t){return l.a.createElement(j.e,{key:t,onClick:function(){return a.onRowClick(t)}},l.a.createElement(\"div\",null,l.a.createElement(j.d,{id:\"row-\".concat(t),value:\"row-0\",title:\"row-0\",name:\"row-0\",checked:a.state.selectedRow===t}),l.a.createElement(j.b,null,l.a.createElement(k.a,{className:\"bx--structured-list-svg\",icon:R.e}))),l.a.createElement(j.b,{className:\"simple-list-row\"},e))},a.state={selectedRow:0},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this;return l.a.createElement(\"div\",{className:\"bx--grid pattern-container\"},l.a.createElement(E,{title:\"Simple List\",subtitle:\"This pattern will display an array of model objects in a simple list column list.\"}),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(j.f,{selection:!0,border:!0},l.a.createElement(j.c,null,l.a.createElement(j.e,{head:!0},l.a.createElement(j.b,{head:!0}),l.a.createElement(j.b,{head:!0},\"Simple List Title\"))),l.a.createElement(j.a,null,[\"row1\",\"row2\",\"row3\"].map(function(t,a){return e.renderRow(t,a)}))))))}}]),t}(n.Component),M=a(33),P=a.n(M),z=a(41),U=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).title=\"Table List\",a.subtitle=\"This pattern will display and array of model objects in a multi column grid/table.\",a.columns=[\"Name\",\"Address\",\"City\",\"State\",\"ZipCode\",\"Country\"],a.formatters={ZipCode:function(e){return e+\"-0000\"}},a.data=[{Name:\"Lin\",Address:\"123 Main Street\",City:\"Austin\",State:\"TX\",ZipCode:\"12345\",Country:\"United States\"},{Name:\"Mak\",Address:\"45 2nd Street\",City:\"Austin\",State:\"TX\",ZipCode:\"78766\",Country:\"United States\"},{Name:\"Joe\",Address:\"40 Down Street\",City:\"San Francisco\",State:\"CA\",ZipCode:\"90706\",Country:\"United States\"}],a.onRowClick=function(e){a.setState({selectedRow:e})},a.renderRow=function(e,t){return l.a.createElement(j.e,{key:t,onClick:function(){return a.onRowClick(t)}},l.a.createElement(\"div\",null,l.a.createElement(j.d,{id:\"row-\".concat(t),value:\"row-0\",title:\"row-0\",name:\"row-0\",checked:a.state.selectedRow===t}),l.a.createElement(j.b,null,l.a.createElement(k.a,{className:\"bx--structured-list-svg\",icon:R.e}))),a.columns.map(function(t){var n=a.formatters[t]||function(e){return e};return l.a.createElement(j.b,{key:t,className:\"simple-list-row\"},n(e[t]))}))},a.state={data:[],selectedRow:0},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"componentDidMount\",value:function(){var e=Object(z.a)(P.a.mark(function e(){return P.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:this.setState({data:this.data});case 1:case\"end\":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:\"render\",value:function(){var e=this,t=this.state.data;return l.a.createElement(\"div\",{className:\"bx--grid pattern-container\"},l.a.createElement(E,{title:this.title,subtitle:this.subtitle}),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(j.f,{selection:!0,border:!0},l.a.createElement(j.c,null,l.a.createElement(j.e,{head:!0},l.a.createElement(j.b,{head:!0}),this.columns.map(function(e){return l.a.createElement(j.b,{head:!0,key:e},e.charAt(0).toUpperCase()+e.slice(1).replace(/([A-Z])/g,\" $1\"))}))),l.a.createElement(j.a,null,t.map(function(t,a){return e.renderRow(t,a)}))))))}}]),t}(n.Component),V=a(97),Z=V.a.Table,B=V.a.TableBody,W=V.a.TableCell,H=V.a.TableContainer,K=V.a.TableHead,$=V.a.TableHeader,X=V.a.TableRow,J=V.a.TableSelectAll,Y=V.a.TableSelectRow,_=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).selectedRowsListA=[],a.selectedRowsListB=[],a.moveFromListAToB=function(e){var t=a.state.rowsListA.slice(),n=a.state.rowsListB.slice();a.selectedRowsListA.forEach(function(e){t=t.filter(function(t){return t.id!==e.id||(n.push(t),!1)})}),a.setState({rowsListA:t,rowsListB:n})},a.moveFromListBToA=function(e){var t=a.state.rowsListA.slice(),n=a.state.rowsListB.slice();a.selectedRowsListB.forEach(function(e){n=n.filter(function(a){return a.id!==e.id||(t.push(a),!1)})}),a.setState({rowsListA:t,rowsListB:n})},a.state={rowsListA:[{id:\"aa\",name:\"Load Balancer 1\",port:25},{id:\"ab\",name:\"Load Balancer 2\",port:80},{id:\"ac\",name:\"Load Balancer 3\",port:443}],rowsListB:[{id:\"ba\",name:\"Load Balancer 4\",port:3e3},{id:\"bb\",name:\"Load Balancer 5\",port:4e3},{id:\"bc\",name:\"Load Balancer 6\",port:5e3}],headers:[{key:\"name\",header:\"Name\"},{key:\"port\",header:\"Port\"}]},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this;return l.a.createElement(\"div\",{className:\"bx--grid pattern-container\"},l.a.createElement(E,{title:\"List To List\",subtitle:\"This pattern is based on a Simple list pattern but will display two lists and allow the moving of data from one list to another and back again.\"}),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12 bx--col-lg-5\"},l.a.createElement(V.a,{rows:this.state.rowsListA,headers:this.state.headers,render:function(t){var a=t.rows,n=t.headers,r=t.getHeaderProps,s=t.getRowProps,i=t.getSelectionProps,c=t.selectedRows;return e.selectedRowsListA=c,l.a.createElement(H,{title:\"List A\"},l.a.createElement(Z,null,l.a.createElement(K,null,l.a.createElement(X,null,l.a.createElement(J,i()),n.map(function(e){return l.a.createElement($,r({header:e}),e.header)}))),l.a.createElement(B,null,a.map(function(e){return l.a.createElement(X,s({row:e}),l.a.createElement(Y,i({row:e})),e.cells.map(function(e){return l.a.createElement(W,{key:e.id},e.value)}))}))))}})),l.a.createElement(\"div\",{className:\"bx--col-xs-12 bx--col-lg-2 list-to-list-moving-btn-container\"},l.a.createElement(\"div\",null,l.a.createElement(N.a,{className:\"list-to-list-moving-btn\",onClick:this.moveFromListAToB},\">>\"),l.a.createElement(\"br\",null),l.a.createElement(N.a,{className:\"list-to-list-moving-btn\",onClick:this.moveFromListBToA},\"<<\"))),l.a.createElement(\"div\",{className:\"bx--col-xs-12 bx--col-lg-5\"},l.a.createElement(V.a,{rows:this.state.rowsListB,headers:this.state.headers,render:function(t){var a=t.rows,n=t.headers,r=t.getHeaderProps,s=t.getRowProps,i=t.getSelectionProps,c=t.selectedRows;return e.selectedRowsListB=c,l.a.createElement(H,{title:\"List B\"},l.a.createElement(Z,null,l.a.createElement(K,null,l.a.createElement(X,null,l.a.createElement(J,i()),n.map(function(e){return l.a.createElement($,r({header:e}),e.header)}))),l.a.createElement(B,null,a.map(function(e){return l.a.createElement(X,s({row:e}),l.a.createElement(Y,i({row:e})),e.cells.map(function(e){return l.a.createElement(W,{key:e.id},e.value)}))}))))}}))))}}]),t}(n.Component),G=!0,q=function(e){function t(e){var a;Object(i.a)(this,t),(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).saveData=function(e){var t,n,l=e.target,r=l.name,s=l.value;s?a.setState((t={},Object(S.a)(t,r,s),Object(S.a)(t,r+\"Invalid\",!1),t)):a.setState((n={},Object(S.a)(n,r,s),Object(S.a)(n,r+\"Invalid\",!0),n))},a.saveDataDropdown1=function(e){var t=e.selectedItem;a.setState({country:t,countryInvalid:!1,state:\"\",city:\"\",stateList:Object.keys(a.state.data[t])})},a.saveDataDropdown2=function(e){var t=e.selectedItem;a.setState({state:t,stateInvalid:!1,city:\"\",cityList:a.state.data[a.state.country][t]})},a.saveDataDropdown3=function(e){var t=e.selectedItem;a.setState({city:t,cityInvalid:!1})},a.checkForm=function(){return G=!0,a.state.country||(a.setState({countryInvalid:!0}),G=!1),a.state.state||(a.setState({stateInvalid:!0}),G=!1),a.state.city||(a.setState({cityInvalid:!0}),G=!1),G},a.saveForm=function(e){if(e.preventDefault(),a.checkForm()){var t={country:a.state.country,state:a.state.state,city:a.state.city};a.setState({dataToSave:t})}};var n={\"United States\":{TX:[\"Austin\",\"Dallas\",\"Other\"],CA:[\"San Francisco\",\"Los Angeles\",\"Other\"],Other:[\"Other\"]},Mexico:{Aguascalientes:[\"Aguascalientes\",\"Calvillo\",\"Other\"],\"Baja California\":[\"Tijuana\",\"Mexicali\",\"Other\"],Other:[\"Other\"]}};return a.state={data:n,dataToSave:{},countryList:Object.keys(n),stateList:[],cityList:[]},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this;return l.a.createElement(\"div\",{className:\"bx--grid pattern-container\"},l.a.createElement(E,{title:\"Linked List\",subtitle:\"This pattern will link multiple list or combo controls together so when a selection on one list is made it may change the information displayed in the other linked list.\"}),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(b.a,null,l.a.createElement(v.a,null,l.a.createElement(\"p\",{className:\"bx--label left-align\"},\"Country\"),l.a.createElement(h.a,{id:\"country\",label:\"Select a country..\",ariaLabel:\"Select a country..\",items:this.state.countryList,selectedItem:this.state.country,onChange:this.saveDataDropdown1}),this.state.countryInvalid&&l.a.createElement(\"p\",{className:\"dropdown-invalid\"},\"Please select a country..\"),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"p\",{className:\"bx--label left-align\"},\"State\"),l.a.createElement(h.a,{id:\"state\",label:\"Select a state..\",ariaLabel:\"Select a state..\",items:this.state.stateList,selectedItem:this.state.state,onChange:this.saveDataDropdown2}),this.state.stateInvalid&&l.a.createElement(\"p\",{className:\"dropdown-invalid\"},\"Please select a state..\"),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"p\",{className:\"bx--label left-align\"},\"City\"),l.a.createElement(h.a,{id:\"city\",label:\"Select a city..\",ariaLabel:\"Select a city..\",items:this.state.cityList,selectedItem:this.state.city,onChange:this.saveDataDropdown3}),this.state.cityInvalid&&l.a.createElement(\"p\",{className:\"dropdown-invalid\"},\"Please select a city..\"),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"div\",{className:\"left-align\"},l.a.createElement(N.a,{onClick:this.saveForm},\"Submit\")))))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),Object.keys(this.state.dataToSave).length>0&&l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12 left-align\"},l.a.createElement(b.a,null,Object.keys(this.state.dataToSave).map(function(t){return l.a.createElement(\"p\",{key:t},\"\\xa0\\xa0\",l.a.createElement(\"strong\",null,t.charAt(0).toUpperCase()+t.slice(1),\":\"),\" \",e.state.dataToSave[t])})),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))))}}]),t}(n.Component),Q=function(e){function t(e){var a;Object(i.a)(this,t),(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).onRowClick=function(e){a.setState({selectedRow:e})},a.renderRow=function(e,t){return l.a.createElement(j.e,{key:t,onClick:function(){return a.onRowClick(t)}},l.a.createElement(\"div\",null,l.a.createElement(j.d,{id:\"row-\".concat(t),value:\"row-0\",title:\"row-0\",name:\"row-0\",checked:a.state.selectedRow===t}),l.a.createElement(j.b,null,l.a.createElement(k.a,{className:\"bx--structured-list-svg\",icon:R.e}))),Object.keys(e).map(function(t){return l.a.createElement(j.b,{key:t,className:\"simple-list-row\"},e[t])}))};return a.state={selectedRow:0,data:[[{label:\"Name\",value:\"Lin\",type:\"textinput\"},{label:\"Address\",value:\"123 Main Street\",type:\"textinput\"},{label:\"City\",value:\"Austin\",type:\"textinput\"},{label:\"State\",value:[\"TX\"],type:\"dropdown\"},{label:\"ZipCode\",value:\"12345\",type:\"textinput\"},{label:\"Country\",value:[\"United States\"],type:\"dropdown\"}],[{label:\"Name\",value:\"Mak\",type:\"textinput\"},{label:\"Address\",value:\"45 2nd Street\",type:\"textinput\"},{label:\"City\",value:\"Austin\",type:\"textinput\"},{label:\"State\",value:[\"TX\"],type:\"dropdown\"},{label:\"ZipCode\",value:\"78766\",type:\"textinput\"},{label:\"Country\",value:[\"United States\"],type:\"dropdown\"}],[{label:\"Name\",value:\"Joe\",type:\"textinput\"},{label:\"Address\",value:\"40 Down Street\",type:\"textinput\"},{label:\"City\",value:\"San Francisco\",type:\"textinput\"},{label:\"State\",value:[\"CA\"],type:\"dropdown\"},{label:\"ZipCode\",value:\"90706\",type:\"textinput\"},{label:\"Country\",value:[\"United States\"],type:\"dropdown\"}]]},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this,t=this.state.selectedRow,a=this.state.data,n=a[t].map(function(e){return e.label});return l.a.createElement(\"div\",{className:\"bx--grid \"},l.a.createElement(E,{title:\"Master Detail\",subtitle:\"This pattern will use a simple list of table list and link to a display form.\"}),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(j.f,{selection:!0,border:!0},l.a.createElement(j.c,null,l.a.createElement(j.e,{head:!0},l.a.createElement(j.b,{head:!0}),n.map(function(e){return l.a.createElement(j.b,{head:!0,key:e},e.charAt(0).toUpperCase()+e.slice(1).replace(/([A-Z])/g,\" $1\"))}))),l.a.createElement(j.a,null,a.map(function(t,a){var n=t.map(function(e){return e.value});return e.renderRow(n,a)}))))),l.a.createElement(y,{data:a[t]}))}}]),t}(n.Component),ee=function(e){function t(e){var a;Object(i.a)(this,t),(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).onRowClick=function(e){a.setState({selectedRow:e})},a.addRow=function(){var e=a.state.data.slice(),t=a.state.data.length;e[t]=[{label:\"Name\",value:\"Enter data below\",type:\"textinput\"},{label:\"Address\",value:\"\",type:\"textinput\"},{label:\"City\",value:\"\",type:\"textinput\"},{label:\"State\",value:[\"\"],type:\"dropdown\"},{label:\"ZipCode\",value:\"\",type:\"textinput\"},{label:\"Country\",value:[\"\"],type:\"dropdown\"}],a.setState({data:e,selectedRow:t,adding:!0})},a.deleteRow=function(){var e=a.state.data.slice();e.length>0&&(e.splice(a.state.selectedRow,1),a.setState({data:e,selectedRow:0}))},a.updateRow=function(e){var t=a.state.data.slice();t[a.state.selectedRow]=[{label:\"Name\",value:e.name,type:\"textinput\"},{label:\"Address\",value:e.address,type:\"textinput\"},{label:\"City\",value:e.city,type:\"textinput\"},{label:\"State\",value:[e.state],type:\"dropdown\"},{label:\"ZipCode\",value:e.zipCode,type:\"textinput\"},{label:\"Country\",value:[e.country],type:\"dropdown\"}],a.setState({data:t})},a.toggleAdding=function(){var e=a.state.adding;a.setState({adding:!e})},a.renderRow=function(e,t){return l.a.createElement(j.e,{key:t,onClick:function(){return a.onRowClick(t)}},l.a.createElement(\"div\",null,l.a.createElement(j.d,{id:\"row-\".concat(t),value:\"row-0\",title:\"row-0\",name:\"row-0\",checked:a.state.selectedRow===t}),l.a.createElement(j.b,null,l.a.createElement(k.a,{className:\"bx--structured-list-svg\",icon:R.e}))),Object.keys(e).map(function(t){return l.a.createElement(j.b,{key:t,className:\"simple-list-row\"},e[t])}))};return a.state={selectedRow:0,data:[[{label:\"Name\",value:\"Lin\",type:\"textinput\"},{label:\"Address\",value:\"123 Main Street\",type:\"textinput\"},{label:\"City\",value:\"Austin\",type:\"textinput\"},{label:\"State\",value:[\"TX\"],type:\"dropdown\"},{label:\"ZipCode\",value:\"12345\",type:\"textinput\"},{label:\"Country\",value:[\"United States\"],type:\"dropdown\"}],[{label:\"Name\",value:\"Mak\",type:\"textinput\"},{label:\"Address\",value:\"45 2nd Street\",type:\"textinput\"},{label:\"City\",value:\"Austin\",type:\"textinput\"},{label:\"State\",value:[\"TX\"],type:\"dropdown\"},{label:\"ZipCode\",value:\"78766\",type:\"textinput\"},{label:\"Country\",value:[\"United States\"],type:\"dropdown\"}],[{label:\"Name\",value:\"Joe\",type:\"textinput\"},{label:\"Address\",value:\"40 Down Street\",type:\"textinput\"},{label:\"City\",value:\"San Francisco\",type:\"textinput\"},{label:\"State\",value:[\"CA\"],type:\"dropdown\"},{label:\"ZipCode\",value:\"90706\",type:\"textinput\"},{label:\"Country\",value:[\"United States\"],type:\"dropdown\"}]],adding:!1},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this,t=this.state.selectedRow,a=this.state.data,n=a.length?a[t].map(function(e){return e.label}):[];return l.a.createElement(\"div\",{className:\"bx--grid pattern-container\"},l.a.createElement(E,{title:\"Create, Read, Update, Delete\",subtitle:\"This composite pattern is build from the Table List pattern and uses the Validating Form pattern for creating items, Update Form pattern for Update.\"}),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(j.f,{selection:!0,border:!0},l.a.createElement(j.c,null,l.a.createElement(j.e,{head:!0},l.a.createElement(j.b,{head:!0}),n.map(function(e){return l.a.createElement(j.b,{head:!0,key:e},e.charAt(0).toUpperCase()+e.slice(1).replace(/([A-Z])/g,\" $1\"))}))),l.a.createElement(j.a,null,a.map(function(t,a){var n=t.map(function(e){return e.value});return e.renderRow(n,a)}))))),l.a.createElement(\"div\",{className:\"bx--row left-align\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(N.a,{className:\"add-delete-row-buttons\",onClick:this.addRow},\"Add Row\"),l.a.createElement(N.a,{className:\"add-delete-row-buttons\",onClick:this.deleteRow},\"Delete Row\"))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),a.length>0&&l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(C,{data:a[t],updateRow:this.updateRow,adding:this.state.adding,toggleAdding:this.toggleAdding}))))}}]),t}(n.Component),te=a(96),ae=V.a.Table,ne=V.a.TableBody,le=V.a.TableCell,re=V.a.TableContainer,se=V.a.TableHead,ie=V.a.TableHeader,ce=V.a.TableRow,oe=function(e){function t(e){var a;Object(i.a)(this,t),(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).onSearch=function(e){a.setState({searchKeyword:e.target.value},function(){var e=a.state.initialRowsList.filter(function(e){return Object.keys(e).reduce(function(t,n){return t||e[n].toLocaleLowerCase().includes(a.state.searchKeyword.toLocaleLowerCase())},!1)});a.setState({rowsList:e})})};var n=[{id:\"1\",name:\"Load Balancer 1\",port:\"25\",status:\"Disabled\"},{id:\"2\",name:\"Load Balancer 2\",port:\"80\",status:\"Starting\"},{id:\"3\",name:\"Load Balancer 3\",port:\"443\",status:\"Active\"}];return a.state={searchKeyword:\"\",initialRowsList:n,rowsList:n,headers:[{key:\"name\",header:\"Name\"},{key:\"port\",header:\"Port\"},{key:\"status\",header:\"Status\"}]},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"div\",{className:\"bx--grid pattern-container\"},l.a.createElement(E,{title:\"Search List\",subtitle:\"This pattern uses a Validating Form pattern linked to a Table List pattern for display of the items that have been searched for.\"}),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(te.a,{value:this.state.searchKeyword,labelText:\"Search\",closeButtonLabelText:\"\",placeHolderText:\"Search\",onChange:this.onSearch,id:\"search-1\",light:!0}))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},0!==this.state.rowsList.length&&l.a.createElement(V.a,{rows:this.state.rowsList,headers:this.state.headers,render:function(e){var t=e.rows,a=e.headers,n=e.getHeaderProps,r=e.getRowProps;e.getSelectionProps;return l.a.createElement(re,{title:\"\"},l.a.createElement(ae,null,l.a.createElement(se,null,l.a.createElement(ce,null,a.map(function(e){return l.a.createElement(ie,n({header:e}),e.header)}))),l.a.createElement(ne,null,t.map(function(e){return l.a.createElement(ce,r({row:e}),e.cells.map(function(e){return l.a.createElement(le,{key:e.id},e.value)}))}))))}}),0===this.state.rowsList.length&&l.a.createElement(\"p\",{className:\"center-align\"},\"No matching result\"))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))}}]),t}(n.Component),de=function(e){function t(e){var a;Object(i.a)(this,t),(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).formatDataForDisplayForm=function(e){return Object.keys(e).map(function(t){return{label:t,value:e[t],type:\"textinput\"}})},a.onSearch=function(e){a.setState({searchKeyword:e.target.value})},a.getFilteredData=function(e){return e.filter(function(e){return Object.keys(e).reduce(function(t,n){return t||e[n].toLocaleLowerCase().includes(a.state.searchKeyword.toLocaleLowerCase())},!1)})};return a.state={searchKeyword:\"\",data:[{Name:\"Lin\",Address:\"123 Main Street\",City:\"Austin\",State:\"TX\",ZipCode:\"12345\",Country:\"USA\"},{Name:\"Mak\",Address:\"45 2nd Street\",City:\"Austin\",State:\"TX\",ZipCode:\"78766\",Country:\"USA\"},{Name:\"Joe\",Address:\"40 Down Street\",City:\"San Francisco\",State:\"CA\",ZipCode:\"90706\",Country:\"USA\"}]},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this.state.data,t=this.getFilteredData(e);return l.a.createElement(\"div\",{className:\"bx--grid pattern-container\"},l.a.createElement(E,{title:\"Search Form\",subtitle:\"This pattern uses a Validating Form pattern and is linked to a Display Form pattern for a single item display.\"}),l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},l.a.createElement(te.a,{value:this.state.searchKeyword,labelText:\"Search\",closeButtonLabelText:\"\",placeHolderText:\"Search\",onChange:this.onSearch,id:\"search-1\",light:!0}))),l.a.createElement(\"br\",null),\"\"!==this.state.searchKeyword&&l.a.createElement(\"div\",{className:\"bx--row\"},l.a.createElement(\"div\",{className:\"bx--col-xs-12\"},t.length>0?l.a.createElement(y,{data:this.formatDataForDisplayForm(t[0])}):l.a.createElement(\"p\",{className:\"center-align\"},\"No matching result\"))))}}]),t}(n.Component),me=function(e){function t(){var e,a;Object(i.a)(this,t);for(var n=arguments.length,l=new Array(n),r=0;r<n;r++)l[r]=arguments[r];return(a=Object(o.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(l)))).components={\"Display Form\":y,\"Validating Form\":C,\"Update Form\":g,\"Validating Form Wizard 1\":I,\"Validating Form Wizard 2\":L,\"Simple List\":F,\"Table List\":U,\"List to List\":_,\"Linked List\":q,\"Master Detail\":Q,\"Create, Read, Update, Delete\":ee,\"Search List\":oe,\"Search Form\":de},a.defaultComponent=\"Display Form\",a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this.components[this.props.patternName||this.defaultComponent];return l.a.createElement(\"div\",{className:\"pattern-container\"},l.a.createElement(e,{showDescription:!0}))}}]),t}(n.Component),ue=function(){return l.a.createElement(\"svg\",{icon:!0,width:\"20\",height:\"20\",xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 32 32\",\"aria-hidden\":\"true\"},l.a.createElement(\"path\",{d:\"M8.24 25.14L7 26.67a14 14 0 0 0 4.18 2.44l.68-1.88a12 12 0 0 1-3.62-2.09zm-4.05-7.07l-2 .35A13.89 13.89 0 0 0 3.86 23l1.73-1a11.9 11.9 0 0 1-1.4-3.93zm7.63-13.31l-.68-1.88A14 14 0 0 0 7 5.33l1.24 1.53a12 12 0 0 1 3.58-2.1zM5.59 10L3.86 9a13.89 13.89 0 0 0-1.64 4.54l2 .35A11.9 11.9 0 0 1 5.59 10zM16 2v2a12 12 0 0 1 0 24v2a14 14 0 0 0 0-28z\"}))},be=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(o.a)(this,Object(d.a)(t).call(this,e))).header=\"Garage for Cloud Catalyst\",a.menuTitle=\"12 Design Pattern\",a.menuItems=[\"Display Form\",\"Validating Form\",\"Update Form\",\"Validating Form Wizard 1\",\"Validating Form Wizard 2\",\"Simple List\",\"Table List\",\"List to List\",\"Linked List\",\"Master Detail\",\"Create, Read, Update, Delete\",\"Search List\",\"Search Form\"],a.onPatternSelection=function(e){a.setState({patternName:e})},a.renderSideNavItems=function(){return a.menuItems.map(function(e){return a.renderSideNavItem(e)})},a.renderSideNavItem=function(e){return l.a.createElement(u.SideNavMenuItem,{href:\"# \",isActive:e===a.state.patternName,onClick:function(t){return a.onPatternSelection(e)}},e)},a.state={patternName:a.menuItems[0]},a}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"div\",null,l.a.createElement(u.Header,{\"aria-label\":\"IBM Platform Name\"},l.a.createElement(u.SkipToContent,null),l.a.createElement(u.HeaderName,{href:\"#\",prefix:\"IBM\"},this.header)),l.a.createElement(u.SideNav,{\"aria-label\":\"Side navigation\"},l.a.createElement(u.SideNavItems,null,l.a.createElement(u.SideNavMenu,{defaultExpanded:!0,icon:l.a.createElement(ue,null),title:this.menuTitle},this.renderSideNavItems()))),l.a.createElement(u.Content,{id:\"main-content\"},l.a.createElement(me,{patternName:this.state.patternName})))}}]),t}(n.Component),ve=(a(84),function(e){function t(){return Object(i.a)(this,t),Object(o.a)(this,Object(d.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"div\",{className:\"App\"},l.a.createElement(be,null))}}]),t}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(l.a.createElement(ve,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[47,2,1]]]);","extractedComments":[]}